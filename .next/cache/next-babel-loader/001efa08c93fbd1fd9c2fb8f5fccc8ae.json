{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport reducer from \"../reducers\";\n\nconst configureStore = () => {\n  const enhancer = false ? compose(applyMiddleware([])) : compose(applyMiddleware([]));\n  const store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: \"CHANGE_NICKNAME\",\n    data: \"boogicho\"\n  });\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","reducer","configureStore","enhancer","store","dispatch","type","data","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,QAAQ,GAAG,QACdJ,OAAO,CAACD,eAAe,CAAC,EAAD,CAAhB,CADO,GAEdC,OAAO,CAACD,eAAe,CAAC,EAAD,CAAhB,CAFV;AAGA,QAAMM,KAAK,GAAGJ,WAAW,CAACC,OAAD,EAASE,QAAT,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,CAAe;AACbC,IAAAA,IAAI,EAAE,iBADO;AAEbC,IAAAA,IAAI,EAAE;AAFO,GAAf;AAIA,SAAOH,KAAP;AACD,CAVD;;AAYA,MAAMI,OAAO,GAAGX,aAAa,CAACK,cAAD,EAAiB;AAC5CO,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from \"next-redux-wrapper\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport reducer from \"../reducers\";\r\n\r\nconst configureStore = () => {\r\n  const enhancer = process.env.NODE_ENV === 'production'\r\n   ? compose(applyMiddleware([]))\r\n   : compose(applyMiddleware([]))\r\n  const store = createStore(reducer,enhancer);\r\n  store.dispatch({\r\n    type: \"CHANGE_NICKNAME\",\r\n    data: \"boogicho\",\r\n  });\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}