{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SangHo\\\\Desktop\\\\inflearn\\\\react-nodebird\\\\front\\\\components\\\\PostCard.js\";\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { Button, Card, Popover, List, Comment } from 'antd';\nimport React, { useCallback, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport PostImages from '../components/PostImages';\nimport CommentForm from '../components/CommentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: liked,\n    1: setlike\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setlike(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 38\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, 'retweet', false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, 'heart', false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, 'heart', false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, 'comment', false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, 'more', false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }, this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments.length}개의 댓글`,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/components/PostCard.js"],"names":["EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","HeartTwoTone","Button","Card","Popover","List","Comment","React","useCallback","useState","useSelector","PropTypes","Avatar","PostImages","CommentForm","PostCard","post","liked","setlike","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","id","state","user","me","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["\r\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined,RetweetOutlined ,HeartTwoTone } from '@ant-design/icons';\r\nimport { Button, Card, Popover, List, Comment } from 'antd';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport PostImages from '../components/PostImages'\r\nimport CommentForm from '../components/CommentForm'\r\n\r\n\r\n\r\nconst PostCard = ({ post }) => {\r\n    const [liked, setlike] = useState(false);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const onToggleLike = useCallback(()=> {\r\n        setlike((prev) => !prev);\r\n    }, [])\r\n    const onToggleComment = useCallback(()=> {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, [])\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    return (\r\n        <div style={{marginBottom:20}}>\r\n            <Card\r\n            cover={post.Images[0] && <PostImages images={post.Images} />}\r\n            actions={[\r\n            <RetweetOutlined key='retweet' />,\r\n            liked\r\n                ?<HeartTwoTone twoToneColor='#eb2f96' key='heart' onClick={onToggleLike} />\r\n                :<HeartOutlined onClick={onToggleLike} key='heart'/>,\r\n            <MessageOutlined onClick={onToggleComment} key='comment'/>,\r\n            <Popover key='more' content={(\r\n                <Button.Group>\r\n                 {id && post.User.id === id \r\n                  ? (\r\n                <>\r\n                 <Button>수정</Button>\r\n                 <Button type='danger'>삭제</Button>\r\n                </>\r\n            ) :<Button>신고</Button>}\r\n               </Button.Group>\r\n            )}>\r\n                <EllipsisOutlined />\r\n            </Popover>,\r\n\r\n\r\n            ]}\r\n            >\r\n               <Card.Meta \r\n               avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n               title={post.User.nickname}\r\n               description={post.content}\r\n               />\r\n                   \r\n            </Card>\r\n            {commentFormOpened && (\r\n               <div>\r\n                <CommentForm post={post} />\r\n                <List  header={`${post.Comments.length}개의 댓글`}\r\n                 itemLayout={\"horizontal\"}\r\n                 dataSource={post.Comments}\r\n                 renderItem={(item) => (\r\n                     <li>\r\n                        <Comment\r\n                        author={item.User.nickname}\r\n                        avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                        content={item.content}\r\n                        />   \r\n                     </li>\r\n                 )}\r\n                />\r\n               </div>)}\r\n            {/* <CommentForm />\r\n            <Comments /> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nPostCard.propTypes = {\r\n    post:PropTypes.shape({\r\n        id:PropTypes.number,\r\n        User:PropTypes.object,\r\n        content:PropTypes.string,\r\n        createdAt:PropTypes.object,\r\n        Comments:PropTypes.arrayOf(PropTypes.object),\r\n        Images:PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\nexport default PostCard"]},"metadata":{},"sourceType":"module"}