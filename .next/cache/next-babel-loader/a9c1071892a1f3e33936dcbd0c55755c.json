{"ast":null,"code":"import { all, fork, put, delay, takeLatest, throttle } from \"@redux-saga/core/effects\";\nimport axios from 'axios';\nimport { LOG_IN_FAILURE, LOG_IN_SUCCESS, LOG_IN_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS, LOG_OUT_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS, SIGN_UP_REQUEST, FOLLOW_FAILURE, FOLLOW_SUCCESS, FOLLOW_REQUEST, UNFOLLOW_FAILURE, UNFOLLOW_SUCCESS, UNFOLLOW_REQUEST } from '../reducers/user';\n\nfunction followAPI(data) {\n  return axios.post('/api/follow', data);\n}\n\nfunction* follow(action) {\n  // 일로 들어옴\n  try {\n    //    const result = yield call(followAPI,action.data) //첫번쨰 자리는 함수고 나머지는 인수들 \n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.post('/api/unfollow', data);\n}\n\nfunction* unfollow(action) {\n  // 일로 들어옴\n  try {\n    //    const result = yield call(logInAPI,action.data) //첫번쨰 자리는 함수고 나머지는 인수들 \n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  // 일로 들어옴\n  try {\n    //    const result = yield call(logInAPI,action.data) //첫번쨰 자리는 함수고 나머지는 인수들 \n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    //  const result = yield call(logOutAPI)\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS //    data:result.data\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.data\n    });\n  }\n}\n\nfunction signUpAPI() {\n  return axios.post('/api/signUp');\n}\n\nfunction* signUp() {\n  try {\n    //  const result = yield call(signUpAPI)\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS //    data:result.data\n\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield throttle(2000, SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield throttle(2000, FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield throttle(2000, UNFOLLOW_REQUEST, unfollow);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchFollow), fork(watchUnfollow), fork(watchLogin), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/sagas/user.js"],"names":["all","fork","put","delay","takeLatest","throttle","axios","LOG_IN_FAILURE","LOG_IN_SUCCESS","LOG_IN_REQUEST","LOG_OUT_FAILURE","LOG_OUT_SUCCESS","LOG_OUT_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","SIGN_UP_REQUEST","FOLLOW_FAILURE","FOLLOW_SUCCESS","FOLLOW_REQUEST","UNFOLLOW_FAILURE","UNFOLLOW_SUCCESS","UNFOLLOW_REQUEST","followAPI","data","post","follow","action","type","err","error","unfollowAPI","unfollow","logInAPI","logIn","logOutAPI","logOut","signUpAPI","signUp","watchLogin","watchLogOut","watchSignUp","watchFollow","watchUnfollow","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, delay, takeLatest, throttle } from \"@redux-saga/core/effects\";\r\nimport axios from 'axios';\r\nimport {\r\n        LOG_IN_FAILURE, LOG_IN_SUCCESS, LOG_IN_REQUEST,\r\n        LOG_OUT_FAILURE, LOG_OUT_SUCCESS, LOG_OUT_REQUEST,\r\n        SIGN_UP_FAILURE, SIGN_UP_SUCCESS, SIGN_UP_REQUEST,\r\n        FOLLOW_FAILURE, FOLLOW_SUCCESS, FOLLOW_REQUEST,\r\n        UNFOLLOW_FAILURE, UNFOLLOW_SUCCESS, UNFOLLOW_REQUEST,\r\n} from '../reducers/user';\r\n\r\nfunction followAPI(data) {\r\n    return axios.post('/api/follow', data)\r\n  } \r\n  \r\n  function* follow(action) {    // 일로 들어옴\r\n      try {\r\n  //    const result = yield call(followAPI,action.data) //첫번쨰 자리는 함수고 나머지는 인수들 \r\n     yield delay(1000);\r\n     yield put({\r\n         type:FOLLOW_SUCCESS,\r\n         data:action.data,\r\n      });\r\n     } catch (err) {\r\n         yield put({\r\n             type:FOLLOW_FAILURE,\r\n             error:err.data\r\n         })\r\n     }\r\n  }\r\n\r\n  function unfollowAPI(data) {\r\n    return axios.post('/api/unfollow', data)\r\n  } \r\n  \r\n  function* unfollow(action) {    // 일로 들어옴\r\n      try {\r\n  //    const result = yield call(logInAPI,action.data) //첫번쨰 자리는 함수고 나머지는 인수들 \r\n     yield delay(1000);\r\n     yield put({\r\n         type:UNFOLLOW_SUCCESS,\r\n         data:action.data\r\n      });\r\n     } catch (err) {\r\n         yield put({\r\n             type:UNFOLLOW_FAILURE,\r\n             error:err.data\r\n         })\r\n     }\r\n  }\r\nfunction logInAPI(data) {\r\n    return axios.post('/api/login', data)\r\n  } \r\n  \r\n  function* logIn(action) {    // 일로 들어옴\r\n      try {\r\n  //    const result = yield call(logInAPI,action.data) //첫번쨰 자리는 함수고 나머지는 인수들 \r\n     yield delay(1000);\r\n     yield put({\r\n         type:LOG_IN_SUCCESS,\r\n         data:action.data\r\n      });\r\n     } catch (err) {\r\n         yield put({\r\n             type:LOG_IN_FAILURE,\r\n             error:err.data\r\n         })\r\n     }\r\n  }\r\n  \r\n  function logOutAPI() {\r\n      return axios.post('/api/logout')\r\n    }\r\n\r\n    function* logOut() {\r\n        try {\r\n          \r\n      //  const result = yield call(logOutAPI)\r\n      yield delay(1000);\r\n       yield put({\r\n           type:LOG_OUT_SUCCESS,\r\n        //    data:result.data\r\n        });\r\n       } catch (err) {\r\n           yield put({\r\n               type:LOG_OUT_FAILURE,\r\n               error:err.data\r\n           })\r\n       }\r\n    }\r\n  \r\n      \r\n  function signUpAPI() {\r\n    return axios.post('/api/signUp')\r\n  }\r\n\r\n  function* signUp() {\r\n      try {\r\n        \r\n    //  const result = yield call(signUpAPI)\r\n    yield delay(1000);\r\n     yield put({\r\n         type:SIGN_UP_SUCCESS,\r\n      //    data:result.data\r\n      });\r\n     } catch (err) {\r\n         yield put({\r\n             type:SIGN_UP_FAILURE,\r\n             error:err.data\r\n         })\r\n     }\r\n  }\r\n\r\n\r\n\r\n\r\nfunction* watchLogin() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchSignUp() {\r\n    yield throttle(2000, SIGN_UP_REQUEST, signUp);\r\n}\r\nfunction* watchFollow() {\r\n    yield throttle(2000, FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnfollow() {\r\n    yield throttle(2000, UNFOLLOW_REQUEST, unfollow);\r\n}\r\nexport default function* userSaga() {\r\n    yield all([\r\n     fork(watchFollow),\r\n     fork(watchUnfollow),\r\n     fork(watchLogin),\r\n     fork(watchLogOut),\r\n     fork(watchSignUp),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}