{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SangHo\\\\Desktop\\\\inflearn\\\\react-nodebird\\\\front\\\\components\\\\PostForm.js\";\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { addPost, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostDone,\n    addPostLoading\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput('');\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    }\n\n    const formData = new FormData();\n    imagePaths.forEach(p => {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  const imageInput = useRef();\n  const onclickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeImages = useCallback(e => {\n    console.log('images', e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  });\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onclickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        htmlType: \"submit\",\n        loading: addPostLoading,\n        children: \"\\uCA31\\uCA31\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map((v, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:3065/${v}`,\n          style: {\n            width: '200px'\n          },\n          alt: v\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onRemoveImage(i),\n            children: \"\\uC81C\\uAC70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 20\n        }, this)]\n      }, v, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 16\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/components/PostForm.js"],"names":["Button","Form","Input","React","useCallback","useRef","useEffect","useDispatch","useSelector","useInput","addPost","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","ADD_POST_REQUEST","PostForm","imagePaths","addPostDone","addPostLoading","state","post","dispatch","text","onChangeText","setText","onSubmit","trim","alert","formData","FormData","forEach","p","append","type","data","imageInput","onclickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","call","f","onRemoveImage","index","margin","float","map","v","i","display","width"],"mappings":"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","sourcesContent":["import { Button, Form, Input } from 'antd';\r\nimport React, { useCallback, useRef, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useInput from '../hooks/useInput';\r\nimport { addPost, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from '../reducers/post';\r\n\r\n\r\nconst PostForm = () => {\r\n  const { imagePaths, addPostDone, addPostLoading } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  const [text, onChangeText, setText] = useInput('');\r\n\r\n  useEffect(()=> {\r\n    if(addPostDone) {\r\n      setText('');\r\n    }\r\n    }, [addPostDone]);\r\n    \r\n    const onSubmit = useCallback(() => {\r\n        if(!text || !text.trim()) {\r\n            return alert('게시글을 작성하세요.')\r\n        }\r\n\r\n        const formData = new FormData();\r\n        imagePaths.forEach((p) => {\r\n            formData.append('image', p);\r\n        });\r\n        formData.append('content', text);\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: formData,\r\n        });\r\n    }, [text, imagePaths]);\r\n\r\n    const imageInput = useRef();\r\n    const onclickImageUpload = useCallback(() => {\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n\r\n    const onChangeImages = useCallback((e) => {\r\n        console.log('images', e.target.files);\r\n        const imageFormData = new FormData();\r\n        [].forEach.call(e.target.files, (f) => {\r\n            imageFormData.append('image', f);\r\n      });\r\n      dispatch({\r\n          type: UPLOAD_IMAGES_REQUEST,\r\n          data: imageFormData,\r\n      })\r\n    })\r\n    const onRemoveImage = useCallback((index) => () => {\r\n        dispatch({\r\n            type: REMOVE_IMAGE,\r\n            data: index,\r\n        })\r\n    })\r\n    return (\r\n        <Form style={{ margin:'10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n        <Input.TextArea \r\n        value={text} \r\n        onChange={onChangeText} \r\n        maxLength={140} \r\n        placeholder=\"어떤 신기한 일이 있었나요?\" \r\n        />\r\n\r\n        <div>\r\n        <input type='file' name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages}/>\r\n        <Button onClick={onclickImageUpload}>이미지 업로드</Button>\r\n        <Button type='primary' style={{ float:'right' }} htmlType=\"submit\" loading={addPostLoading}>쨱쨱</Button>     \r\n       </div> \r\n\r\n       <div>\r\n           {imagePaths.map((v,i)=> (\r\n               <div key={v} style={{ display:'inline-block' }}>\r\n                   <img src={`http://localhost:3065/${v}`} style={{ width:'200px' }} alt={v} />\r\n                   <div>\r\n                    <Button onClick={onRemoveImage(i)}>제거</Button>\r\n                   </div>\r\n               </div>\r\n\r\n           ))}\r\n       </div>\r\n        </Form>\r\n    )\r\n\r\n}\r\n\r\nexport default PostForm"]},"metadata":{},"sourceType":"module"}