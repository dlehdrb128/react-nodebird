{"ast":null,"code":"import { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE } from '../reducers/user';\n\nfunction changeNicknameAPI(data) {\n  console.log(data, 'changenickname');\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err); // console.dir(err);\n\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  console.log(data);\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err); // console.dir(err);\n\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  console.log(data, \"datatatataa\");\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    console.log(action, \"saga signup action\");\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post('/api/unfollow');\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchChangeNickname), fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/sagas/user.js"],"names":["all","delay","fork","put","takeLatest","call","axios","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","changeNicknameAPI","data","console","log","patch","nickname","changeNickname","action","result","type","err","error","response","logInAPI","post","logIn","logOutAPI","logOut","signUpAPI","signUp","followAPI","follow","unfollowAPI","unfollow","loadUserAPI","get","loadUser","watchChangeNickname","watchLoadUser","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"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","sourcesContent":["import { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  FOLLOW_FAILURE,\r\n  FOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAILURE,\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  UNFOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST,\r\n  UNFOLLOW_SUCCESS,\r\n  CHANGE_NICKNAME_REQUEST,\r\n  CHANGE_NICKNAME_SUCCESS,\r\n  CHANGE_NICKNAME_FAILURE,\r\n} from '../reducers/user';\r\n\r\nfunction changeNicknameAPI(data) {\r\n  console.log(data, 'changenickname');\r\n  return axios.patch('/user/nickname', { nickname: data });\r\n}\r\n\r\nfunction* changeNickname(action) {\r\n  try {\r\n    const result = yield call(changeNicknameAPI, action.data);\r\n    yield put({\r\n      type: CHANGE_NICKNAME_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    // console.dir(err);\r\n    yield put({\r\n      type: CHANGE_NICKNAME_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logInAPI(data) {\r\n  console.log(data);\r\n  return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    // console.dir(err);\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction logOutAPI() {\r\n  return axios.post('/user/logout');\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    yield call(logOutAPI);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n  console.log(data, \"datatatataa\");\r\n  return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    console.log(action, \"saga signup action\");\r\n    const result = yield call(signUpAPI, action.data);\r\n    console.log(result);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction followAPI() {\r\n  return axios.post('/api/follow');\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    // const result = yield call(followAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unfollowAPI() {\r\n  return axios.post('/api/unfollow');\r\n}\r\n\r\nfunction* unfollow(action) {\r\n  try {\r\n    // const result = yield call(unfollowAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadUserAPI() {\r\n  return axios.get('/user');\r\n}\r\n\r\nfunction* loadUser(action) {\r\n  try {\r\n    const result = yield call(loadUserAPI, action.data);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* watchChangeNickname() {\r\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchChangeNickname),\r\n    fork(watchLoadUser),\r\n    fork(watchFollow),\r\n    fork(watchUnfollow),\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}