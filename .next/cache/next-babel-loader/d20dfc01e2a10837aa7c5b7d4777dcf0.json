{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  logInLoading: false,\n  //로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutFailure: null,\n  singUpLoading: false,\n  // 로그 아웃 시도중\n  singUpDone: false,\n  singUFailure: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport var FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport var FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action, \"액션 확인\", action.data);\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      console.log('reducer login');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: true,\n        logInError: null\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true,\n        isLoggedIn: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: 'zerocho'\n        })\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutFailure","singUpLoading","singUpDone","singUFailure","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","console","log","isLoggingIn","isLoggedIn","nickname","isLoggingOut"],"mappings":";;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,YAAY,EAAC,KADW;AACH;AACrBC,EAAAA,SAAS,EAAC,KAFc;AAGxBC,EAAAA,UAAU,EAAC,IAHa;AAIxBC,EAAAA,aAAa,EAAC,KAJU;AAIF;AACtBC,EAAAA,UAAU,EAAC,KALa;AAMxBC,EAAAA,aAAa,EAAC,IANU;AAOxBC,EAAAA,aAAa,EAAC,KAPU;AAOF;AACtBC,EAAAA,UAAU,EAAC,KARa;AASxBC,EAAAA,YAAY,EAAC,IATW;AAYxBC,EAAAA,EAAE,EAAC,IAZqB;AAaxBC,EAAAA,UAAU,EAAC,EAba;AAcxBC,EAAAA,SAAS,EAAC;AAdc,CAArB;AAiBP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAU;AACxC,SAAO;AACHC,IAAAA,IAAI,EAACd,cADF;AAEHa,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALM;AAQP,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACrC,SAAO;AACHD,IAAAA,IAAI,EAACX;AADF,GAAP;AAGH,CAJM;;AAOP,IAAMa,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzB9B,YAAyB;AAAA,MAAX+B,MAAW;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,OAApB,EAA6BA,MAAM,CAACL,IAApC;;AACA,UAAQK,MAAM,CAACJ,IAAf;AACI,SAAKd,cAAL;AACImB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,6CACWH,KADX;AAEO7B,QAAAA,YAAY,EAAC,IAFpB;AAGOE,QAAAA,UAAU,EAAC;AAHlB;;AAKA,SAAKW,cAAL;AACI,6CACWgB,KADX;AAEQI,QAAAA,WAAW,EAAC,IAFpB;AAGQC,QAAAA,UAAU,EAAC,IAHnB;AAIQzB,QAAAA,EAAE,kCAAKqB,MAAM,CAACL,IAAZ;AAAkBU,UAAAA,QAAQ,EAAC;AAA3B;AAJV;;AAMJ,SAAKrB,cAAL;AACQ,6CACWe,KADX;AAEQI,QAAAA,WAAW,EAAC,KAFpB;AAGQC,QAAAA,UAAU,EAAC;AAHnB;;AAKR,SAAKnB,eAAL;AACI,6CACWc,KADX;AAEOO,QAAAA,YAAY,EAAC;AAFpB;;AAKJ,SAAKpB,eAAL;AACI,6CACWa,KADX;AAEQO,QAAAA,YAAY,EAAC,KAFrB;AAGQF,QAAAA,UAAU,EAAC,KAHnB;AAIQzB,QAAAA,EAAE,EAAC;AAJX;;AAQJ,SAAKQ,eAAL;AACI,6CACWY,KADX;AAEQO,QAAAA,YAAY,EAAC;AAFrB;;AAIR;AACI,aAAOP,KAAP;AA1CR;AA4CH,CA9CD;;AAgDA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    logInLoading:false,  //로그인 시도중\r\n    logInDone:false,\r\n    logInError:null,\r\n    logOutLoading:false,  // 로그아웃 시도중\r\n    logOutDone:false,\r\n    logOutFailure:null,\r\n    singUpLoading:false,  // 로그 아웃 시도중\r\n    singUpDone:false,\r\n    singUFailure:null,\r\n   \r\n\r\n    me:null,\r\n    signUpData:{},\r\n    loginData:{},\r\n}\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST'\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST'\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS'\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE'\r\n\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type:LOG_IN_REQUEST,\r\n        data,\r\n    }\r\n}\r\n\r\n\r\nexport const logoutRequestAction = () => {\r\n    return {\r\n        type:LOG_OUT_REQUEST,\r\n    }\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    console.log(action, \"액션 확인\", action.data)\r\n    switch (action.type) {\r\n        case LOG_IN_REQUEST:\r\n            console.log('reducer login')\r\n            return {\r\n                    ...state,\r\n                   logInLoading:true,\r\n                   logInError:null,\r\n                }\r\n            case LOG_IN_SUCCESS:\r\n                return {\r\n                        ...state,\r\n                        isLoggingIn:true,\r\n                        isLoggedIn:true,\r\n                        me:{...action.data, nickname:'zerocho'},\r\n                }\r\n            case LOG_IN_FAILURE:\r\n                    return {\r\n                            ...state,\r\n                            isLoggingIn:false,\r\n                            isLoggedIn:false,         \r\n                    }\r\n            case LOG_OUT_REQUEST:\r\n                return {\r\n                        ...state,\r\n                       isLoggingOut:true,\r\n                };\r\n            \r\n            case LOG_OUT_SUCCESS:\r\n                return {\r\n                        ...state,\r\n                        isLoggingOut:false,\r\n                        isLoggedIn:false,\r\n                        me:null,\r\n                  \r\n                };\r\n            \r\n            case LOG_OUT_FAILURE:\r\n                return {\r\n                        ...state,\r\n                        isLoggingOut:false,   \r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}