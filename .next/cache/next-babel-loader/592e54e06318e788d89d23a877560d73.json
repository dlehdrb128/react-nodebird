{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  singUpLoading: false,\n  // 회원 가입 시도중\n  singUpDone: false,\n  singUpError: null,\n  changeNicnameLoading: false,\n  // 닉네임 변경 시도중\n  changeNicnameDone: false,\n  changeNicnameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'SIGN_UP_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'SIGN_UP_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: '제로초',\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    nickname: '부기초'\n  }, {\n    nickname: '상호'\n  }, {\n    nickname: '동규'\n  }],\n  Followers: [{\n    nickname: '부기초'\n  }, {\n    nickname: '상호'\n  }, {\n    nickname: '동규'\n  }]\n});\n\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    console.log(action, \"액션 확인\", action.data);\n\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logInLoading: true,\n          logInDone: false,\n          logInError: null\n        });\n\n      case LOG_IN_SUCCESS:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logInLoading: false,\n          logInDone: true,\n          me: dummyUser(action.data)\n        });\n\n      case LOG_IN_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logInLoading: false,\n          logInError: action.error\n        });\n\n      case LOG_OUT_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logOutLoading: true,\n          logOutDone: false,\n          logOutError: null\n        });\n\n      case LOG_OUT_SUCCESS:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logOutLoading: false,\n          logOutDone: true,\n          me: null\n        });\n\n      case LOG_OUT_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          logOutLoading: false,\n          logOutError: action.error\n        });\n\n      case SIGN_UP_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          singUpLoading: false,\n          singUpDone: false,\n          singUpError: null\n        });\n\n      case SIGN_UP_SUCCESS:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          singUpLoading: false,\n          singUpDone: true\n        });\n\n      case SIGN_UP_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          changeNicknameLoading: false,\n          changeNicknameError: action.error\n        });\n\n      case CHANGE_NICKNAME_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          changeNicknameLoading: false,\n          changeNicknameDone: false,\n          changeNicknameError: null\n        });\n\n      case CHANGE_NICKNAME_SUCCESS:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          changeNicknameLoading: false,\n          changeNicknameDone: true\n        });\n\n      case CHANGE_NICKNAME_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          changeNicknameLoading: false,\n          changeNicknameError: action.error\n        });\n\n      case ADD_POST_TO_ME:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          me: _objectSpread(_objectSpread({}, state.me), {}, {\n            Posts: [{\n              id: action.data\n            }, ...state.me.Posts]\n          })\n        });\n\n      case REMOVE_POST_OF_ME:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          me: _objectSpread(_objectSpread({}, state.me), {}, {\n            Posts: state.me.Posts.filter(v => v.id !== action.data)\n          })\n        });\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","singUpLoading","singUpDone","singUpError","changeNicnameLoading","changeNicnameDone","changeNicnameError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followings","Followers","loginRequestAction","type","logoutRequestAction","reducer","state","action","produce","draft","console","log","error","changeNicknameLoading","changeNicknameError","changeNicknameDone","filter","v"],"mappings":"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","sourcesContent":["export const initialState = {\r\n  logInLoading: false, // 로그인 시도중\r\n  logInDone: false,\r\n  logInError: null,\r\n  logOutLoading: false, // 로그아웃 시도중\r\n  logOutDone: false,\r\n  logOutError: null,\r\n  singUpLoading: false, // 회원 가입 시도중\r\n  singUpDone: false,\r\n  singUpError: null,\r\n  changeNicnameLoading: false, // 닉네임 변경 시도중\r\n  changeNicnameDone: false,\r\n  changeNicnameError: null,\r\n\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nconst dummyUser = (data) => ({\r\n  ...data,\r\n  nickname: '제로초',\r\n  id: 1,\r\n  Posts: [{ id: 1 }],\r\n  Followings: [{ nickname: '부기초' }, { nickname: '상호' }, { nickname: '동규' }],\r\n  Followers: [{ nickname: '부기초' }, { nickname: '상호' }, { nickname: '동규' }],\r\n});\r\n\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type:LOG_IN_REQUEST,\r\n        data,\r\n    }\r\n}\r\n\r\n\r\nexport const logoutRequestAction = () => {\r\n    return {\r\n        type:LOG_OUT_REQUEST,\r\n    }\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return produce(state, (draft) => {\r\n        console.log(action, \"액션 확인\", action.data)\r\n        switch (action.type) {\r\n            case LOG_IN_REQUEST:\r\n                return {\r\n                        ...state,\r\n                       logInLoading:true,\r\n                       logInDone:false,\r\n                       logInError:null,\r\n                    }\r\n                case LOG_IN_SUCCESS:\r\n                    return {\r\n                            ...state,\r\n                            logInLoading:false,\r\n                            logInDone:true,\r\n                            me:dummyUser(action.data),\r\n                    }\r\n                case LOG_IN_FAILURE:\r\n                        return {\r\n                                ...state,\r\n                                logInLoading:false,\r\n                                logInError:action.error,         \r\n                        }\r\n                case LOG_OUT_REQUEST:\r\n                    return {\r\n                            ...state,\r\n                           logOutLoading:true,\r\n                           logOutDone:false,\r\n                           logOutError:null\r\n                    };\r\n                \r\n                case LOG_OUT_SUCCESS:\r\n                    return {\r\n                            ...state,\r\n                            logOutLoading:false,\r\n                            logOutDone:true,\r\n                            me:null,\r\n                      \r\n                    };\r\n                \r\n                case LOG_OUT_FAILURE:\r\n                    return {\r\n                            ...state,\r\n                            logOutLoading:false,\r\n                            logOutError:action.error,\r\n                    };\r\n                 \r\n                    case SIGN_UP_REQUEST:\r\n                        return {\r\n                                ...state,\r\n                               singUpLoading:false,\r\n                               singUpDone:false,\r\n                               singUpError:null,\r\n                        };\r\n                    \r\n                    case SIGN_UP_SUCCESS:\r\n                        return {\r\n                                ...state,\r\n                                singUpLoading:false,\r\n                                singUpDone:true,\r\n                        };\r\n                    \r\n                    case SIGN_UP_FAILURE:\r\n                        return {\r\n                                ...state,\r\n                                changeNicknameLoading:false,\r\n                                changeNicknameError:action.error,\r\n                        };\r\n    \r\n                        case CHANGE_NICKNAME_REQUEST:\r\n                            return {\r\n                                    ...state,\r\n                                   changeNicknameLoading:false,\r\n                                   changeNicknameDone:false,\r\n                                   changeNicknameError:null,\r\n                            };\r\n                        \r\n                        case CHANGE_NICKNAME_SUCCESS:\r\n                            return {\r\n                                    ...state,\r\n                                    changeNicknameLoading:false,\r\n                                    changeNicknameDone:true,\r\n                            };\r\n                   \r\n                        case CHANGE_NICKNAME_FAILURE:\r\n                        return {\r\n                            ...state,\r\n                            changeNicknameLoading: false,\r\n                            changeNicknameError: action.error,\r\n                        };\r\n                        case ADD_POST_TO_ME:\r\n                        return {\r\n                            ...state,\r\n                            me: {\r\n                            ...state.me,\r\n                            Posts: [{ id: action.data }, ...state.me.Posts],\r\n                                            },\r\n                                        };\r\n                        case REMOVE_POST_OF_ME:\r\n                        return {\r\n                            ...state,\r\n                            me: {\r\n                                    ...state.me,\r\n                                    Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n                                },\r\n                            };\r\n                            default:\r\n        \r\n                            return state;\r\n        }\r\n    });\r\n};\r\n  \r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}