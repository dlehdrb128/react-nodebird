{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggedIn: false,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const loginRequestAction = data => {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data\n  };\n};\nexport const loginSuccessAction = data => {\n  return {\n    type: 'LOG_IN_SUCCESS',\n    data\n  };\n};\nexport const loginfailureAction = data => {\n  return {\n    type: 'LOG_IN_FAILURE',\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: 'LOG_OUT_REQUEST'\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true,\n        me: action.data\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false,\n        me: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/reducers/user.js"],"names":["initialState","isLoggedIn","me","signUpData","loginData","loginRequestAction","data","type","loginSuccessAction","loginfailureAction","logoutRequestAction","reducer","state","action"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAC,KADa;AAExBC,EAAAA,EAAE,EAAC,IAFqB;AAGxBC,EAAAA,UAAU,EAAC,EAHa;AAIxBC,EAAAA,SAAS,EAAC;AAJc,CAArB;AAQP,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,IAAU;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAC,gBADF;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,kBAAkB,GAAIF,IAAD,IAAU;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAC,gBADF;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,kBAAkB,GAAIH,IAAD,IAAU;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAC,gBADF;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMI,mBAAmB,GAAG,MAAM;AACrC,SAAO;AACHH,IAAAA,IAAI,EAAC;AADF,GAAP;AAGH,CAJM;;AAMP,MAAMI,OAAO,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAmC;AAC/C,UAAQA,MAAM,CAACN,IAAf;AACI,SAAK,QAAL;AACI,6CACWK,KADX;AAEQX,QAAAA,UAAU,EAAC,IAFnB;AAGQC,QAAAA,EAAE,EAACW,MAAM,CAACP;AAHlB;;AAKA,SAAK,SAAL;AACI,6CACWM,KADX;AAEQX,QAAAA,UAAU,EAAC,KAFnB;AAGQC,QAAAA,EAAE,EAAC;AAHX;;AAMR;AACI,aAAOU,KAAP;AAfR;AAiBH,CAlBD;;AAoBA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    isLoggedIn:false,\r\n    me:null,\r\n    signUpData:{},\r\n    loginData:{},\r\n}\r\n\r\n\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type:'LOG_IN_REQUEST',\r\n        data,\r\n    }\r\n}\r\n\r\nexport const loginSuccessAction = (data) => {\r\n    return {\r\n        type:'LOG_IN_SUCCESS',\r\n        data,\r\n    }\r\n}\r\n\r\nexport const loginfailureAction = (data) => {\r\n    return {\r\n        type:'LOG_IN_FAILURE',\r\n        data,\r\n    }\r\n}\r\n\r\nexport const logoutRequestAction = () => {\r\n    return {\r\n        type:'LOG_OUT_REQUEST',\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case 'LOG_IN':\r\n            return {\r\n                    ...state,\r\n                    isLoggedIn:true,\r\n                    me:action.data,\r\n            }\r\n            case 'LOG_OUT':\r\n                return {\r\n                        ...state,\r\n                        isLoggedIn:false,\r\n                        me:null,\r\n                  \r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}