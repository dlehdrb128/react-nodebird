{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\SangHo\\\\Desktop\\\\inflearn\\\\react-nodebird\\\\front\\\\components\\\\CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useEffect } from 'react';\nimport useInput from '../hooks/useInput';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentDone = _useSelector.addCommentDone;\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1],\n      setCommentText = _useInput2[2];\n\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        userId: id,\n        postId: post.id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40,\n          zIndex: 1\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: addcommentLoading,\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"U6e+gEPEVmrY9uHvoO06FGAohj0=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useInput];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/components/CommentForm.js"],"names":["Button","Form","Input","React","useCallback","useEffect","useInput","PropTypes","useSelector","useDispatch","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","addCommentDone","dispatch","commentText","onChangeCommentText","setCommentText","onSubmitComment","console","log","type","data","content","userId","postId","position","margin","right","bottom","zIndex","addcommentLoading","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,SAAQA,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAkC,MAAlC;AACA,OAAOC,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAa;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC7B,MAAMC,EAAE,GAAGL,WAAW,CAAC,UAACM,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;;AACA,qBAAyBL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACF,IAAjB;AAAA,GAAD,CAApC;AAAA,MAAOK,cAAP,gBAAOA,cAAP;;AACA,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AACA,kBAA2DH,QAAQ,CAAC,EAAD,CAAnE;AAAA;AAAA,MAAOa,WAAP;AAAA,MAAoBC,mBAApB;AAAA,MAAyCC,cAAzC;;AAEAhB,EAAAA,SAAS,CAAC,YAAK;AACX,QAAGY,cAAH,EAAmB;AACfI,MAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AACJ,GAJQ,EAIN,CAACJ,cAAD,CAJM,CAAT;AAOA,MAAMK,eAAe,GAAGlB,WAAW,CAAC,YAAM;AACtCmB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACC,EAAjB,EAAqBM,WAArB;AACAD,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEf,mBADD;AAELgB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAER,WAAX;AAAwBS,QAAAA,MAAM,EAAEf,EAAhC;AAAoCgB,QAAAA,MAAM,EAAEjB,IAAI,CAACC;AAAjD;AAFD,KAAD,CAAR;AAIH,GANkC,EAMhC,CAACM,WAAD,EAAcN,EAAd,CANgC,CAAnC;AAOA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAGS,eAAjB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEQ,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEZ,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAG;AAAEU,UAAAA,QAAQ,EAAC,UAAX;AAAuBE,UAAAA,KAAK,EAAC,CAA7B;AAAgCC,UAAAA,MAAM,EAAE,CAAC,EAAzC;AAA6CC,UAAAA,MAAM,EAAC;AAApD,SAAhB;AAAwE,QAAA,IAAI,EAAC,SAA7E;AAAuF,QAAA,QAAQ,EAAC,QAAhG;AAAyG,QAAA,OAAO,EAAIC,iBAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CA5BD;;GAAMxB,W;UACSH,W,EACcA,W,EACRC,W,EAC0CH,Q;;;KAJzDK,W;AA8BNA,WAAW,CAACyB,SAAZ,GAAwB;AACpBxB,EAAAA,IAAI,EAAEL,SAAS,CAAC8B,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAe3B,WAAf","sourcesContent":["import {Button, Form, Input} from 'antd';\r\nimport React,{ useCallback, useEffect} from 'react';\r\nimport useInput from '../hooks/useInput';\r\nimport PropTypes from 'prop-types'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nconst CommentForm = ({post})  => {\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const {addCommentDone} = useSelector((state) => state.post);\r\n    const dispatch = useDispatch();\r\n    const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n\r\n    useEffect(()=> {\r\n        if(addCommentDone) {\r\n            setCommentText('');\r\n        }\r\n    }, [addCommentDone])\r\n    \r\n\r\n    const onSubmitComment = useCallback(() => {\r\n        console.log(post.id, commentText);\r\n        dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: { content: commentText, userId: id, postId: post.id },\r\n          });\r\n    }, [commentText, id]);\r\n    return (\r\n        <Form onFinish={ onSubmitComment }>\r\n          <Form.Item style={{ position: 'relative', margin: 0 }} >\r\n              <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\r\n              <Button style= {{ position:'absolute', right:0, bottom: -40, zIndex:1}} type='primary' htmlType='submit' loading= { addcommentLoading}>삐약</Button>\r\n          </Form.Item> \r\n        </Form>\r\n    )\r\n} \r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n  };\r\n  \r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}