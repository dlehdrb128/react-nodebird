{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchsignUp),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, put, delay, takeLatest } from \"@redux-saga/core/effects\";\nimport axios from 'axios';\nimport { LOG_IN_FAILURE, LOG_IN_SUCCESS, LOG_IN_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS, LOG_OUT_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS, SIGN_UP_REQUEST } from '../reducers/user';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction logIn(action) {\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 11;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context.t0.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS //    data:result.data\n\n          });\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context2.t0.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction signUpAPI() {\n  return axios.post('/api/signUp');\n}\n\nfunction signUp() {\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS //    data:result.data\n\n          });\n\n        case 5:\n          _context3.next = 11;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 11;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context3.t0.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchsignUp() {\n  return _regeneratorRuntime.wrap(function watchsignUp$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchLogin), fork(watchLogOut)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/sagas/user.js"],"names":["logIn","logOut","signUp","watchLogin","watchLogOut","watchsignUp","userSaga","all","fork","put","delay","takeLatest","axios","LOG_IN_FAILURE","LOG_IN_SUCCESS","LOG_IN_REQUEST","LOG_OUT_FAILURE","LOG_OUT_SUCCESS","LOG_OUT_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","SIGN_UP_REQUEST","logInAPI","data","post","action","type","error","logOutAPI","signUpAPI"],"mappings":"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","sourcesContent":["import { all, fork, put, delay, takeLatest } from \"@redux-saga/core/effects\";\r\nimport axios from 'axios'\r\nimport {\r\n        LOG_IN_FAILURE, LOG_IN_SUCCESS,  LOG_IN_REQUEST,\r\n        LOG_OUT_FAILURE ,LOG_OUT_SUCCESS ,LOG_OUT_REQUEST,\r\n        SIGN_UP_FAILURE, SIGN_UP_SUCCESS , SIGN_UP_REQUEST\r\n} from '../reducers/user'\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/api/login', data)\r\n  } \r\n  \r\n  function* logIn(action) {    // 일로 들어옴\r\n      try {\r\n  //    const result = yield call(logInAPI,action.data) //첫번쨰 자리는 함수고 나머지는 인수들 \r\n     yield delay(1000);\r\n     yield put({\r\n         type:LOG_IN_SUCCESS,\r\n         data:action.data\r\n      });\r\n     } catch (err) {\r\n         yield put({\r\n             type:LOG_IN_FAILURE,\r\n             error:err.data\r\n         })\r\n     }\r\n  }\r\n  \r\n  function logOutAPI() {\r\n      return axios.post('/api/logout')\r\n    }\r\n\r\n    function* logOut() {\r\n        try {\r\n          \r\n      //  const result = yield call(logOutAPI)\r\n      yield delay(1000);\r\n       yield put({\r\n           type:LOG_OUT_SUCCESS,\r\n        //    data:result.data\r\n        });\r\n       } catch (err) {\r\n           yield put({\r\n               type:LOG_OUT_FAILURE,\r\n               error:err.data\r\n           })\r\n       }\r\n    }\r\n  \r\n      \r\n  function signUpAPI() {\r\n    return axios.post('/api/signUp')\r\n  }\r\n\r\n  function* signUp() {\r\n      try {\r\n        \r\n    //  const result = yield call(signUpAPI)\r\n    yield delay(1000);\r\n     yield put({\r\n         type:LOG_OUT_SUCCESS,\r\n      //    data:result.data\r\n      });\r\n     } catch (err) {\r\n         yield put({\r\n             type:LOG_OUT_FAILURE,\r\n             error:err.data\r\n         })\r\n     }\r\n  }\r\n\r\n\r\n\r\n\r\nfunction* watchLogin() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST,logOut)\r\n}\r\nfunction* watchsignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp)\r\n}\r\nexport default function* userSaga() {\r\n    yield all([\r\n     fork(watchLogin),\r\n     fork(watchLogOut),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}