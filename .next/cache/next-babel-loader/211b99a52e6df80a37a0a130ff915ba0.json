{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  isLoggingIn: false,\n  //로그인 시도중\n  isLoggedIn: false,\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport var loginAction = function loginAction(data) {\n  return function (dispatch, getState) {\n    var state = getState();\n    dispatch(loginRequestAction());\n    axios.post('/api/login').then(function () {\n      dispatch(loginSuccessAction(res.data));\n    })[\"catch\"](function (err) {\n      dispatch(loginfailureAction(err));\n    });\n  };\n};\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: 'LOG_IN_REQUEST',\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: 'LOG_OUT_REQUEST'\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOG_IN_REQUEST':\n      console.log('reducer login');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true,\n        me: action.data\n      });\n\n    case 'LOG_IN_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true,\n        isLoggedIn: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: 'zerocho'\n        })\n      });\n\n    case 'LOG_IN_FAILURES':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false\n      });\n\n    case 'LOG_OUT_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case 'LOG_OUT_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case 'LOG_OUT_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/reducers/user.js"],"names":["initialState","isLoggingIn","isLoggedIn","isLoggingOut","me","signUpData","loginData","loginAction","data","dispatch","getState","state","loginRequestAction","axios","post","then","loginSuccessAction","res","err","loginfailureAction","type","logoutRequestAction","reducer","action","console","log","nickname"],"mappings":";;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,WAAW,EAAC,KADY;AACJ;AACpBC,EAAAA,UAAU,EAAC,KAFa;AAGxBC,EAAAA,YAAY,EAAC,KAHW;AAGJ;AAEpBC,EAAAA,EAAE,EAAC,IALqB;AAMxBC,EAAAA,UAAU,EAAC,EANa;AAOxBC,EAAAA,SAAS,EAAC;AAPc,CAArB;AASP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACjC,SAAO,UAACC,QAAD,EAAUC,QAAV,EAAuB;AACzB,QAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACDD,IAAAA,QAAQ,CAACG,kBAAkB,EAAnB,CAAR;AACAC,IAAAA,KAAK,CAACC,IAAN,CAAW,YAAX,EACCC,IADD,CACM,YAAK;AACPN,MAAAA,QAAQ,CAACO,kBAAkB,CAACC,GAAG,CAACT,IAAL,CAAnB,CAAR;AACH,KAHD,WAIO,UAACU,GAAD,EAAQ;AACXT,MAAAA,QAAQ,CAACU,kBAAkB,CAACD,GAAD,CAAnB,CAAR;AACH,KAND;AAOH,GAVD;AAWH,CAZM;AAcP,OAAO,IAAMN,kBAAkB,GAAG,SAArBA,kBAAqB,CAACJ,IAAD,EAAU;AACxC,SAAO;AACHY,IAAAA,IAAI,EAAC,gBADF;AAEHZ,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALM;AAQP,OAAO,IAAMa,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACrC,SAAO;AACHD,IAAAA,IAAI,EAAC;AADF,GAAP;AAGH,CAJM;;AAOP,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAmC;AAAA,MAAlCX,KAAkC,uEAA1BX,YAA0B;AAAA,MAAZuB,MAAY;;AAC/C,UAAQA,MAAM,CAACH,IAAf;AACI,SAAK,gBAAL;AACII,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,6CACWd,KADX;AAEQV,QAAAA,WAAW,EAAC,IAFpB;AAGQG,QAAAA,EAAE,EAACmB,MAAM,CAACf;AAHlB;;AAKA,SAAK,gBAAL;AACI,6CACWG,KADX;AAEQV,QAAAA,WAAW,EAAC,IAFpB;AAGQC,QAAAA,UAAU,EAAC,IAHnB;AAIQE,QAAAA,EAAE,kCAAKmB,MAAM,CAACf,IAAZ;AAAkBkB,UAAAA,QAAQ,EAAC;AAA3B;AAJV;;AAMA,SAAK,iBAAL;AACI,6CACWf,KADX;AAEQV,QAAAA,WAAW,EAAC,KAFpB;AAGQC,QAAAA,UAAU,EAAC;AAHnB;;AAKR,SAAK,iBAAL;AACI,6CACWS,KADX;AAEOR,QAAAA,YAAY,EAAC;AAFpB;;AAKJ,SAAK,iBAAL;AACI,6CACWQ,KADX;AAEQR,QAAAA,YAAY,EAAC,KAFrB;AAGQD,QAAAA,UAAU,EAAC,KAHnB;AAIQE,QAAAA,EAAE,EAAC;AAJX;;AAQJ,SAAK,iBAAL;AACI,6CACWO,KADX;AAEQR,QAAAA,YAAY,EAAC;AAFrB;;AAIR;AACI,aAAOQ,KAAP;AA1CR;AA4CH,CA7CD;;AA+CA,eAAeW,OAAf","sourcesContent":["export const initialState = {\r\n    isLoggingIn:false,  //로그인 시도중\r\n    isLoggedIn:false,\r\n    isLoggingOut:false, // 로그아웃 시도중\r\n\r\n    me:null,\r\n    signUpData:{},\r\n    loginData:{},\r\n}\r\nexport const loginAction = (data) => {\r\n    return (dispatch,getState) => {\r\n         const state = getState()\r\n        dispatch(loginRequestAction());\r\n        axios.post('/api/login')\r\n        .then(()=> {\r\n            dispatch(loginSuccessAction(res.data))\r\n        })\r\n        .catch((err)=> {\r\n            dispatch(loginfailureAction(err))\r\n        })\r\n    }\r\n}\r\n\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type:'LOG_IN_REQUEST',\r\n        data,\r\n    }\r\n}\r\n\r\n\r\nexport const logoutRequestAction = () => {\r\n    return {\r\n        type:'LOG_OUT_REQUEST',\r\n    }\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case 'LOG_IN_REQUEST':\r\n            console.log('reducer login')\r\n            return {\r\n                    ...state,\r\n                    isLoggingIn:true,\r\n                    me:action.data,\r\n            }\r\n            case 'LOG_IN_SUCCESS':\r\n                return {\r\n                        ...state,\r\n                        isLoggingIn:true,\r\n                        isLoggedIn:true,\r\n                        me:{...action.data, nickname:'zerocho'},\r\n                }\r\n                case 'LOG_IN_FAILURES':\r\n                    return {\r\n                            ...state,\r\n                            isLoggingIn:false,\r\n                            isLoggedIn:false,         \r\n                    }\r\n            case 'LOG_OUT_REQUEST':\r\n                return {\r\n                        ...state,\r\n                       isLoggingOut:true,\r\n                };\r\n            \r\n            case 'LOG_OUT_SUCCESS':\r\n                return {\r\n                        ...state,\r\n                        isLoggingOut:false,\r\n                        isLoggedIn:false,\r\n                        me:null,\r\n                  \r\n                };\r\n            \r\n            case 'LOG_OUT_FAILURE':\r\n                return {\r\n                        ...state,\r\n                        isLoggingOut:false,   \r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}