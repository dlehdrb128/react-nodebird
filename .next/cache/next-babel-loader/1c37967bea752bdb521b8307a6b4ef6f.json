{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\SangHo\\\\Desktop\\\\inflearn\\\\react-nodebird\\\\front\\\\components\\\\CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback } from 'react';\nimport useInput from '../hooks/useInput';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.POST;\n  }),\n      addCommentDone = _useSelector.addCommentDone;\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1];\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        userId: id,\n        postId: post.id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"gBBYWaStqBIvEfl0B5kdShXEK1E=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useInput];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/components/CommentForm.js"],"names":["Button","Form","Input","React","useCallback","useInput","PropTypes","useSelector","useDispatch","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","POST","addCommentDone","dispatch","commentText","onChangeCommentText","useEffect","addPostDone","setText","onSubmitComment","console","log","type","data","content","userId","postId","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,SAAQA,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAkC,MAAlC;AACA,OAAOC,KAAP,IAAeC,WAAf,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAa;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC7B,MAAMC,EAAE,GAAGL,WAAW,CAAC,UAACM,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;;AACA,qBAAyBL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAApC;AAAA,MAAOC,cAAP,gBAAOA,cAAP;;AACA,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AACA,kBAA2CH,QAAQ,CAAC,EAAD,CAAnD;AAAA;AAAA,MAAOc,WAAP;AAAA,MAAoBC,mBAApB;;AAEAC,EAAAA,SAAS,CAAC,YAAK;AACX,QAAGC,WAAH,EAAgB;AACZC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAJQ,EAIN,CAACD,WAAD,CAJM,CAAT;AAOA,MAAME,eAAe,GAAGpB,WAAW,CAAC,YAAK;AACrCqB,IAAAA,OAAO,CAACC,GAAR,CAAYf,IAAI,CAACC,EAAjB,EAAqBO,WAArB;AACAD,IAAAA,QAAQ,CAAC;AACLS,MAAAA,IAAI,EAAElB,mBADD;AAELmB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEV,WAAX;AAAwBW,QAAAA,MAAM,EAAElB,EAAhC;AAAoCmB,QAAAA,MAAM,EAAEpB,IAAI,CAACC;AAAjD;AAFD,KAAD,CAAR;AAIH,GANkC,EAMhC,CAACO,WAAD,EAAcP,EAAd,CANgC,CAAnC;AAOA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEY,eAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAACQ,QAAAA,QAAQ,EAAC,UAAV;AAAuBC,QAAAA,MAAM,EAAC;AAA9B,OAAlB;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEd,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAACY,UAAAA,QAAQ,EAAC,UAAV;AAAsBE,UAAAA,KAAK,EAAC,CAA5B;AAA+BC,UAAAA,MAAM,EAAE,CAAC;AAAxC,SAAf;AAA4D,QAAA,IAAI,EAAC,SAAjE;AAA2E,QAAA,QAAQ,EAAC,QAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CA5BD;;GAAMzB,W;UACSH,W,EACcA,W,EACRC,W,EAC0BH,Q;;;KAJzCK,W;AA8BNA,WAAW,CAAC0B,SAAZ,GAAwB;AACpBzB,EAAAA,IAAI,EAAEL,SAAS,CAAC+B,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAe5B,WAAf","sourcesContent":["import {Button, Form, Input} from 'antd';\r\nimport React,{ useCallback, } from 'react';\r\nimport useInput from '../hooks/useInput';\r\nimport PropTypes from 'prop-types'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nconst CommentForm = ({post})  => {\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const {addCommentDone} = useSelector((state) => state.POST);\r\n    const dispatch = useDispatch();\r\n    const [commentText, onChangeCommentText] = useInput('');\r\n\r\n    useEffect(()=> {\r\n        if(addPostDone) {\r\n            setText('');\r\n        }\r\n    }, [addPostDone])\r\n    \r\n\r\n    const onSubmitComment = useCallback(()=> {\r\n        console.log(post.id, commentText);\r\n        dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: { content: commentText, userId: id, postId: post.id },\r\n          });\r\n    }, [commentText, id])\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n          <Form.Item style={{position:'relative' , margin:0}} >\r\n              <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\r\n              <Button style={{position:'absolute', right:0, bottom: -40}} type='primary' htmlType='submit'>삐약</Button>\r\n          </Form.Item> \r\n        </Form>\r\n    )\r\n} \r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n  };\r\n  \r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}