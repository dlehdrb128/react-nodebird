{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SangHo\\\\Desktop\\\\inflearn\\\\react-nodebird\\\\front\\\\pages\\\\post\\\\[id].js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport wrapper from '../../store/configureStore';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  console.log(singlePost);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        type: \"image/png\",\n        sizes: \"32x32\",\n        href: \"/favicon-32x32.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        type: \"image/png\",\n        sizes: \"16x16\",\n        href: \"/favicon-16x16.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"apple-touch-icon\",\n        sizes: \"180x180\",\n        href: \"/apple-touch-icon.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"manifest\",\n        href: \"/site.webmanifest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"mask-icon\",\n        href: \"/safari-pinned-tab.svg\",\n        color: \"#5bbad5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"theme-color\",\n        content: \"#ffffff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: singlePost.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:title\",\n        content: `${singlePost.User.nickname}님의 게시글`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:description\",\n        content: singlePost.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:image\",\n        content: singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:url\",\n        content: `https://nodebird.com/post/${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostCard, {\n      post: singlePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  console.log(context);\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/pages/post/[id].js"],"names":["React","useSelector","Head","useRouter","END","axios","LOAD_POST_REQUEST","wrapper","PostCard","AppLayout","LOAD_MY_INFO_REQUEST","Post","singlePost","state","post","router","id","query","console","log","User","nickname","content","Images","src","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","data","params","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\nimport { END } from 'redux-saga';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport wrapper from '../../store/configureStore';\r\nimport PostCard from '../../components/PostCard';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\n\r\nconst Post = () => {\r\n  const { singlePost } = useSelector((state) => state.post);\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  console.log(singlePost);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Head>\r\n        <title>\r\n          {singlePost.User.nickname}\r\n          님의 글\r\n        </title>\r\n        <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\" />\r\n          <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\" />\r\n          <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\" />\r\n          <link rel=\"manifest\" href=\"/site.webmanifest\" />\r\n          <link rel=\"mask-icon\" href=\"/safari-pinned-tab.svg\" color=\"#5bbad5\" />\r\n          <meta name=\"theme-color\" content=\"#ffffff\" />\r\n        <meta name=\"description\" content={singlePost.content} />\r\n        <meta property=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`} />\r\n        <meta property=\"og:description\" content={singlePost.content} />\r\n        <meta property=\"og:image\" content={singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'} />\r\n        <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\r\n      </Head>\r\n      <PostCard post={singlePost} />\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  console.log(context);\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}