{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  singUpLoading: false,\n  // 회원 가입 시도중\n  singUpDone: false,\n  singUpError: null,\n  changeNicnameLoading: false,\n  // 닉네임 변경 시도중\n  changeNicnameDone: false,\n  changeNicnameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var CHANGE_NICKNAME_REQUEST = 'SIGN_UP_REQUEST';\nexport var CHANGE_NICKNAME_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var CHANGE_NICKNAME_FAILURE = 'SIGN_UP_FAILURE';\nexport var FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport var FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport var FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport var REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nvar dummyUser = function dummyUser(data) {\n  return _objectSpread(_objectSpread({}, data), {}, {\n    nickname: '제로초',\n    id: 1,\n    Posts: [{\n      id: 1\n    }],\n    Followings: [{\n      nickname: '부기초'\n    }, {\n      nickname: '상호'\n    }, {\n      nickname: '동규'\n    }],\n    Followers: [{\n      nickname: '부기초'\n    }, {\n      nickname: '상호'\n    }, {\n      nickname: '동규'\n    }]\n  });\n};\n\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action, '액션 확인', action.data);\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: true,\n        logInDone: false,\n        logInError: null\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInDone: true,\n        me: dummyUser(action.data)\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        logInError: action.error\n      });\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: true,\n        logOutDone: false,\n        logOutError: null\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutDone: true,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutError: action.error\n      });\n\n    case SIGN_UP_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        singUpLoading: false,\n        singUpDone: false,\n        singUpError: null\n      });\n\n    case SIGN_UP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        singUpLoading: false,\n        singUpDone: true\n      });\n\n    case SIGN_UP_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameError: action.error\n      });\n\n    case CHANGE_NICKNAME_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameDone: false,\n        changeNicknameError: null\n      });\n\n    case CHANGE_NICKNAME_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameDone: true\n      });\n\n    case CHANGE_NICKNAME_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameError: action.error\n      });\n\n    case ADD_POST_TO_ME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        me: _objectSpread(_objectSpread({}, state.me), {}, {\n          Posts: [{\n            id: action.data\n          }].concat(_toConsumableArray(state.me.Posts))\n        })\n      });\n\n    case REMOVE_POST_OF_ME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        me: _objectSpread(_objectSpread({}, state.me), {}, {\n          Posts: state.me.Posts.filter(function (v) {\n            return v.id !== action.data;\n          })\n        })\n      });\n\n    default:\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","singUpLoading","singUpDone","singUpError","changeNicnameLoading","changeNicnameDone","changeNicnameError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followings","Followers","loginRequestAction","type","logoutRequestAction","reducer","state","action","console","log","error","changeNicknameLoading","changeNicknameError","changeNicknameDone","filter","v"],"mappings":"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","sourcesContent":["export const initialState = {\r\n  logInLoading: false, // 로그인 시도중\r\n  logInDone: false,\r\n  logInError: null,\r\n  logOutLoading: false, // 로그아웃 시도중\r\n  logOutDone: false,\r\n  logOutError: null,\r\n  singUpLoading: false, // 회원 가입 시도중\r\n  singUpDone: false,\r\n  singUpError: null,\r\n  changeNicnameLoading: false, // 닉네임 변경 시도중\r\n  changeNicnameDone: false,\r\n  changeNicnameError: null,\r\n\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nconst dummyUser = (data) => ({\r\n  ...data,\r\n  nickname: '제로초',\r\n  id: 1,\r\n  Posts: [{ id: 1 }],\r\n  Followings: [{ nickname: '부기초' }, { nickname: '상호' }, { nickname: '동규' }],\r\n  Followers: [{ nickname: '부기초' }, { nickname: '상호' }, { nickname: '동규' }],\r\n});\r\n\r\nexport const loginRequestAction = (data) => ({\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n  });\r\n  \r\n  export const logoutRequestAction = () => ({\r\n    type: LOG_OUT_REQUEST,\r\n  });\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    console.log(action, '액션 확인', action.data);\r\n    switch (action.type) {\r\n        case LOG_IN_REQUEST:\r\n            return {\r\n                    ...state,\r\n                   logInLoading: true,\r\n                   logInDone: false,\r\n                   logInError: null,\r\n                }\r\n            case LOG_IN_SUCCESS:\r\n                return {\r\n                        ...state,\r\n                        logInLoading: false,\r\n                        logInDone: true,\r\n                        me: dummyUser(action.data),\r\n                }\r\n            case LOG_IN_FAILURE:\r\n                    return {\r\n                            ...state,\r\n                            logInLoading: false,\r\n                            logInError: action.error,\r\n                    }\r\n            case LOG_OUT_REQUEST:\r\n                return {\r\n                        ...state,\r\n                       logOutLoading:true,\r\n                       logOutDone:false,\r\n                       logOutError:null\r\n                };\r\n            \r\n            case LOG_OUT_SUCCESS:\r\n                return {\r\n                        ...state,\r\n                        logOutLoading:false,\r\n                        logOutDone:true,\r\n                        me:null,\r\n                  \r\n                };\r\n            \r\n            case LOG_OUT_FAILURE:\r\n                return {\r\n                        ...state,\r\n                        logOutLoading:false,\r\n                        logOutError:action.error,\r\n                };\r\n             \r\n                case SIGN_UP_REQUEST:\r\n                    return {\r\n                            ...state,\r\n                           singUpLoading:false,\r\n                           singUpDone:false,\r\n                           singUpError:null,\r\n                    };\r\n                \r\n                case SIGN_UP_SUCCESS:\r\n                    return {\r\n                            ...state,\r\n                            singUpLoading:false,\r\n                            singUpDone:true,\r\n                    };\r\n                \r\n                case SIGN_UP_FAILURE:\r\n                    return {\r\n                            ...state,\r\n                            changeNicknameLoading:false,\r\n                            changeNicknameError:action.error,\r\n                    };\r\n\r\n                    case CHANGE_NICKNAME_REQUEST:\r\n                        return {\r\n                                ...state,\r\n                               changeNicknameLoading:false,\r\n                               changeNicknameDone:false,\r\n                               changeNicknameError:null,\r\n                        };\r\n                    \r\n                    case CHANGE_NICKNAME_SUCCESS:\r\n                        return {\r\n                                ...state,\r\n                                changeNicknameLoading: false,\r\n                                changeNicknameDone: true,\r\n                        };\r\n               \r\n    case CHANGE_NICKNAME_FAILURE:\r\n      return {\r\n        ...state,\r\n        changeNicknameLoading: false,\r\n        changeNicknameError: action.error,\r\n      };\r\n    case ADD_POST_TO_ME:\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Posts: [{ id: action.data }, ...state.me.Posts],\r\n        },\r\n      };\r\n    case REMOVE_POST_OF_ME:\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n        },\r\n      };\r\n    default:\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}