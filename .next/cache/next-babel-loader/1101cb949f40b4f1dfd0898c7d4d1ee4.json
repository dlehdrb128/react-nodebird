{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SangHo\\\\Desktop\\\\inflearn\\\\react-nodebird\\\\front\\\\components\\\\FollowButton.js\";\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FollowButton = ({\n  post\n}) => {\n  const {\n    me,\n    followLoading,\n    unfollowLoading\n  } = useSelector(state => state.user);\n  const isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(v => v.id === post.User.id);\n  const onFollow = useCallback(() => {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST\n      });\n    }\n  }, [isFollowing]);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    loading: followLoading || unfollowLoading,\n    onClickButton: onClickButton,\n    children: isFollowing ? '언팔로우' : '팔로우'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default FollowButton;","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/components/FollowButton.js"],"names":["React","useCallback","PropTypes","Button","useSelector","FollowButton","post","me","followLoading","unfollowLoading","state","user","isFollowing","Followings","find","v","id","User","onFollow","dispatch","type","UNFOLLOW_REQUEST","onClickButton","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACjC,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,aAAN;AAAqBC,IAAAA;AAArB,MAAyCL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1D;AACA,QAAMC,WAAW,GAAGL,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEM,UAAJ,CAAeC,IAAf,CAAqBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASV,IAAI,CAACW,IAAL,CAAUD,EAA9C,CAApB;AACA,QAAME,QAAQ,GAAGjB,WAAW,CAAC,MAAM;AAC/B,QAAIW,WAAJ,EAAiB;AACfO,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEC;AADC,OAAD,CAAR;AAGD;AACJ,GAN2B,EAMzB,CAACT,WAAD,CANyB,CAA5B;AAQA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ,aAAa,IAAIC,eAAlC;AAAmD,IAAA,aAAa,EAAGa,aAAnE;AAAA,cAAoFV,WAAW,GAAG,MAAH,GAAY;AAA3G;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAdD;;AAeAP,YAAY,CAACkB,SAAb,GAAyB;AACvBjB,EAAAA,IAAI,EAAEJ,SAAS,CAACsB,MAAV,CAAiBC;AADA,CAAzB;AAIA,eAAepB,YAAf","sourcesContent":["import React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst FollowButton = ({ post }) => {\r\n  const { me, followLoading, unfollowLoading } = useSelector((state) => state.user);\r\n  const isFollowing = me?.Followings.find((v) => v.id === post.User.id);\r\n  const onFollow = useCallback(() => {\r\n      if (isFollowing) {\r\n        dispatch({\r\n          type: UNFOLLOW_REQUEST,\r\n        })\r\n      }\r\n  }, [isFollowing]);\r\n\r\n  return (\r\n    <Button loading={followLoading || unfollowLoading} onClickButton={ onClickButton }>{isFollowing ? '언팔로우' : '팔로우'}</Button>\r\n    );\r\n}\r\nFollowButton.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FollowButton;\r\n"]},"metadata":{},"sourceType":"module"}