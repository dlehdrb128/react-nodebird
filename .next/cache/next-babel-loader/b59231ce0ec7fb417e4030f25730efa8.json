{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  singUpLoading: false,\n  // 회원 가입 시도중\n  singUpDone: false,\n  singUpError: null,\n  changeNicnameLoading: false,\n  // 닉네임 변경 시도중\n  changeNicnameDone: false,\n  changeNicnameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var CHANGE_NICKNAME_REQUEST = 'SIGN_UP_REQUEST';\nexport var CHANGE_NICKNAME_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var CHANGE_NICKNAME_FAILURE = 'SIGN_UP_FAILURE';\nexport var FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport var FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport var FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport var REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nvar dummyUser = function dummyUser(data) {\n  return _objectSpread(_objectSpread({}, data), {}, {\n    nickname: '제로초',\n    id: 1,\n    Posts: [{\n      id: 1\n    }],\n    Followings: [{\n      nickname: '부기초'\n    }, {\n      nickname: '상호'\n    }, {\n      nickname: '동규'\n    }],\n    Followers: [{\n      nickname: '부기초'\n    }, {\n      nickname: '상호'\n    }, {\n      nickname: '동규'\n    }]\n  });\n};\n\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    console.log(action, \"액션 확인\", action.data);\n\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.logInDone = true;\n        draft.me = dummyUser(action.data);\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInDone = action.error;\n        break;\n\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutnDone = true;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false;\n        draft.logOutnDone = action.error;\n\n      case SIGN_UP_REQUEST:\n        draft.singUpLoading = false;\n        draft.singUpDone = false;\n        draft.singUpError = null;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.singUpLoading = false;\n        draft.singUpDone = true;\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.singUpLoading = false;\n        draft.singUpError = action.error;\n        break;\n\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = false;\n        draft.changeNicnameError = null;\n        break;\n\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true;\n        break;\n\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = action.error;\n\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift({\n          id: action.data\n        });\n        break;\n      // return {\n      //     ...state,\n      //     me: {\n      //     ...state.me,\n      //     Posts: [{ id: action.data }, ...state.me.Posts],\n      //                     },\n      //                 };\n\n      case REMOVE_POST_OF_ME:\n        draft.me.Posts = draft.me.Posts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n      // return {\n      //     ...state,\n      //     me: {\n      //             ...state.me,\n      //             Posts: state.me.Posts.filter((v) => v.id !== action.data),\n      //         },\n      //     };\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","singUpLoading","singUpDone","singUpError","changeNicnameLoading","changeNicnameDone","changeNicnameError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followings","Followers","loginRequestAction","type","logoutRequestAction","reducer","state","action","produce","draft","console","log","error","logOutnDone","changeNicknameLoading","changeNicknameDone","unshift","filter","v"],"mappings":"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","sourcesContent":["export const initialState = {\r\n  logInLoading: false, // 로그인 시도중\r\n  logInDone: false,\r\n  logInError: null,\r\n  logOutLoading: false, // 로그아웃 시도중\r\n  logOutDone: false,\r\n  logOutError: null,\r\n  singUpLoading: false, // 회원 가입 시도중\r\n  singUpDone: false,\r\n  singUpError: null,\r\n  changeNicnameLoading: false, // 닉네임 변경 시도중\r\n  changeNicnameDone: false,\r\n  changeNicnameError: null,\r\n\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nconst dummyUser = (data) => ({\r\n  ...data,\r\n  nickname: '제로초',\r\n  id: 1,\r\n  Posts: [{ id: 1 }],\r\n  Followings: [{ nickname: '부기초' }, { nickname: '상호' }, { nickname: '동규' }],\r\n  Followers: [{ nickname: '부기초' }, { nickname: '상호' }, { nickname: '동규' }],\r\n});\r\n\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type:LOG_IN_REQUEST,\r\n        data,\r\n    }\r\n}\r\n\r\n\r\nexport const logoutRequestAction = () => {\r\n    return {\r\n        type:LOG_OUT_REQUEST,\r\n    }\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return produce(state, (draft) => {\r\n        console.log(action, \"액션 확인\", action.data)\r\n        switch (action.type) {\r\n           \r\n            case LOG_IN_REQUEST:\r\n                draft.logInLoading = true;\r\n                draft.logInDone = false;\r\n                draft.logInError = null;\r\n                break;\r\n              \r\n                case LOG_IN_SUCCESS:\r\n                    draft.logInLoading = false;\r\n                    draft.logInDone = true;\r\n                    draft.me =dummyUser(action.data);\r\n                   break;\r\n                case LOG_IN_FAILURE:\r\n                    draft.logInLoading = false;\r\n                    draft.logInDone = action.error;\r\n                      break;\r\n                case LOG_OUT_REQUEST:\r\n                    draft.logOutLoading = true;\r\n                    draft.logOutDone = false;\r\n                    draft.logOutError = null;\r\n                    break;\r\n                case LOG_OUT_SUCCESS:\r\n                    draft.logOutLoading = false;\r\n                    draft.logOutnDone = true;\r\n                    draft.me = null;\r\n                    break;\r\n                case LOG_OUT_FAILURE:\r\n                    draft.logOutLoading = false;\r\n                    draft.logOutnDone = action.error;\r\n                    case SIGN_UP_REQUEST:\r\n                        draft.singUpLoading = false;\r\n                        draft.singUpDone = false;\r\n                        draft.singUpError = null;\r\n                        break;\r\n                    case SIGN_UP_SUCCESS:\r\n                        draft.singUpLoading = false;\r\n                        draft.singUpDone = true;\r\n                        break;\r\n                    case SIGN_UP_FAILURE:\r\n                        draft.singUpLoading = false;\r\n                        draft.singUpError = action.error;\r\n                        break;\r\n                        case CHANGE_NICKNAME_REQUEST:\r\n                            draft.changeNicknameLoading = false;\r\n                            draft.changeNicknameDone = false;\r\n                            draft.changeNicnameError = null;\r\n                            break;\r\n                        case CHANGE_NICKNAME_SUCCESS:\r\n                            draft.changeNicknameLoading = false;\r\n                            draft.changeNicknameDone = true;\r\n                            break;\r\n                        case CHANGE_NICKNAME_FAILURE:\r\n                            draft.changeNicknameLoading = false;\r\n                            draft.changeNicknameDone = action.error;\r\n                        case ADD_POST_TO_ME:\r\n                            draft.me.Posts.unshift({ id:action.data });\r\n                            break;\r\n                        // return {\r\n                        //     ...state,\r\n                        //     me: {\r\n                        //     ...state.me,\r\n                        //     Posts: [{ id: action.data }, ...state.me.Posts],\r\n                        //                     },\r\n                        //                 };\r\n                        case REMOVE_POST_OF_ME:\r\n                            draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n                            break;\r\n                        // return {\r\n                        //     ...state,\r\n                        //     me: {\r\n                        //             ...state.me,\r\n                        //             Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n                        //         },\r\n                        //     };\r\n                            default:\r\n                            break;\r\n                           \r\n        }\r\n    });\r\n};\r\n  \r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}