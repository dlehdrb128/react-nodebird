{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\SangHo\\\\Desktop\\\\inflearn\\\\react-nodebird\\\\front\\\\components\\\\PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { addPost, UPLOAD_IMAGES_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone,\n      addPostLoading = _useSelector.addPostLoading;\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    dispatch(addPost(text));\n  }, [text]);\n  var imageInput = useRef();\n  var onclickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    console.log('images', e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onclickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": 'right'\n        },\n        htmlType: \"submit\",\n        loading: addPostLoading,\n        children: \"\\uCA31\\uCA31\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: v,\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 20\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 20\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 16\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 8\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostForm, \"bniCOE1jQHUYRBa74LtKZHyA+YU=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/components/PostForm.js"],"names":["Button","Form","Input","React","useCallback","useRef","useEffect","useDispatch","useSelector","useInput","addPost","UPLOAD_IMAGES_REQUEST","PostForm","state","post","imagePaths","addPostDone","addPostLoading","dispatch","text","onChangeText","setText","onSubmit","imageInput","onclickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","FormData","forEach","call","f","append","type","data","margin","map","v","display","width"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,OAAT,EAAkBC,qBAAlB,QAA+C,kBAA/C;;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AACrB,qBAAoDJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAA/D;AAAA,MAAQC,UAAR,gBAAQA,UAAR;AAAA,MAAoBC,WAApB,gBAAoBA,WAApB;AAAA,MAAiCC,cAAjC,gBAAiCA,cAAjC;;AACA,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,kBAAsCE,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOU,IAAP;AAAA,MAAaC,YAAb;AAAA,MAA2BC,OAA3B;;AAEAf,EAAAA,SAAS,CAAC,YAAK;AACb,QAAGU,WAAH,EAAgB;AACdK,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACA,GAJM,EAIJ,CAACL,WAAD,CAJI,CAAT;AAME,MAAMM,QAAQ,GAAGlB,WAAW,CAAC,YAAM;AAC/Bc,IAAAA,QAAQ,CAACR,OAAO,CAACS,IAAD,CAAR,CAAR;AACH,GAF2B,EAEzB,CAACA,IAAD,CAFyB,CAA5B;AAIA,MAAMI,UAAU,GAAGlB,MAAM,EAAzB;AACA,MAAMmB,kBAAkB,GAAGpB,WAAW,CAAC,YAAM;AACzCmB,IAAAA,UAAU,CAACE,OAAX,CAAmBC,KAAnB;AACH,GAFqC,EAEnC,CAACH,UAAU,CAACE,OAAZ,CAFmC,CAAtC;AAIA,MAAME,cAAc,GAAGvB,WAAW,CAAC,UAACwB,CAAD,EAAO;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,CAAC,CAACG,MAAF,CAASC,KAA/B;AACA,QAAMC,aAAa,GAAG,IAAIC,QAAJ,EAAtB;AACA,OAAGC,OAAH,CAAWC,IAAX,CAAgBR,CAAC,CAACG,MAAF,CAASC,KAAzB,EAAgC,UAACK,CAAD,EAAO;AACnCJ,MAAAA,aAAa,CAACK,MAAd,CAAqB,OAArB,EAA8BD,CAA9B;AACL,KAFC;AAGFnB,IAAAA,QAAQ,CAAC;AACLqB,MAAAA,IAAI,EAAE5B,qBADD;AAEL6B,MAAAA,IAAI,EAAEP;AAFD,KAAD,CAAR;AAID,GAViC,CAAlC;AAYA,sBACI,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEQ,MAAAA,MAAM,EAAC;AAAT,KAAb;AAAuC,IAAA,OAAO,EAAC,qBAA/C;AAAqE,IAAA,QAAQ,EAAEnB,QAA/E;AAAA,4BACA,QAAC,KAAD,CAAO,QAAP;AACA,MAAA,KAAK,EAAEH,IADP;AAEA,MAAA,QAAQ,EAAEC,YAFV;AAGA,MAAA,SAAS,EAAE,GAHX;AAIA,MAAA,WAAW,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,aADA,eAQA;AAAA,8BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,QAAQ,MAAxC;AAAyC,QAAA,MAAM,MAA/C;AAAgD,QAAA,GAAG,EAAEG,UAArD;AAAiE,QAAA,QAAQ,EAAEI;AAA3E;AAAA;AAAA;AAAA;AAAA,eADA,eAEA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEH,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFA,eAGA,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAE;AAAE,mBAAM;AAAR,SAA9B;AAAiD,QAAA,QAAQ,EAAC,QAA1D;AAAmE,QAAA,OAAO,EAAEP,cAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHA;AAAA;AAAA;AAAA;AAAA;AAAA,aARA,eAcD;AAAA,gBACKF,UAAU,CAAC2B,GAAX,CAAe,UAACC,CAAD;AAAA,4BACZ;AAAa,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAC;AAAV,WAApB;AAAA,kCACI;AAAK,YAAA,GAAG,EAAED,CAAV;AAAa,YAAA,KAAK,EAAE;AAAEE,cAAAA,KAAK,EAAC;AAAR,aAApB;AAAuC,YAAA,GAAG,EAAEF;AAA5C;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA,mCACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,mBAFJ;AAAA,WAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,iBADY;AAAA,OAAf;AADL;AAAA;AAAA;AAAA;AAAA,aAdC;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AA6BH,CA9DD;;GAAM/B,Q;UACgDJ,W,EACnCD,W,EAEqBE,Q;;;KAJlCG,Q;AAgEN,eAAeA,QAAf","sourcesContent":["import { Button, Form, Input } from 'antd';\r\nimport React, { useCallback, useRef, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useInput from '../hooks/useInput';\r\nimport { addPost, UPLOAD_IMAGES_REQUEST } from '../reducers/post';\r\n\r\n\r\nconst PostForm = () => {\r\n  const { imagePaths, addPostDone, addPostLoading } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  const [text, onChangeText, setText] = useInput('');\r\n\r\n  useEffect(()=> {\r\n    if(addPostDone) {\r\n      setText('');\r\n    }\r\n    }, [addPostDone]);\r\n    \r\n    const onSubmit = useCallback(() => {\r\n        dispatch(addPost(text));\r\n    }, [text]);\r\n\r\n    const imageInput = useRef();\r\n    const onclickImageUpload = useCallback(() => {\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n\r\n    const onChangeImages = useCallback((e) => {\r\n        console.log('images', e.target.files);\r\n        const imageFormData = new FormData();\r\n        [].forEach.call(e.target.files, (f) => {\r\n            imageFormData.append('image', f);\r\n      });\r\n      dispatch({\r\n          type: UPLOAD_IMAGES_REQUEST,\r\n          data: imageFormData,\r\n      })\r\n    })\r\n    \r\n    return (\r\n        <Form style={{ margin:'10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n        <Input.TextArea \r\n        value={text} \r\n        onChange={onChangeText} \r\n        maxLength={140} \r\n        placeholder=\"어떤 신기한 일이 있었나요?\" \r\n        />\r\n\r\n        <div>\r\n        <input type='file' name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages}/>\r\n        <Button onClick={onclickImageUpload}>이미지 업로드</Button>\r\n        <Button type='primary' style={{ float:'right' }} htmlType=\"submit\" loading={addPostLoading}>쨱쨱</Button>     \r\n       </div> \r\n\r\n       <div>\r\n           {imagePaths.map((v)=> (\r\n               <div key={v} style={{ display:'inline-block' }}>\r\n                   <img src={v} style={{ width:'200px' }} alt={v} />\r\n                   <div>\r\n                    <Button>제거</Button>\r\n                   </div>\r\n               </div>\r\n\r\n           ))}\r\n       </div>\r\n        </Form>\r\n    )\r\n\r\n}\r\n\r\nexport default PostForm"]},"metadata":{},"sourceType":"module"}