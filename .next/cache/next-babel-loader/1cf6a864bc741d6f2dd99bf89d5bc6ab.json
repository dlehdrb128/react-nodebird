{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  loadMyInfoLoading: false,\n  // 유저 정보 가져오기 시도중\n  loadMyInfoDone: false,\n  loadMyInfoError: null,\n  followLoading: false,\n  // 팔로우 시도중\n  loadUserLoading: false,\n  // 유저 정보 가져오기 시도중\n  loadUserDone: false,\n  loadUserError: null,\n  followLoading: false,\n  // 팔로우 시도중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  // 언팔로우 시도중\n  unfollowDone: false,\n  unfollowError: null,\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  singUpLoading: false,\n  // 회원 가입 시도중\n  singUpDone: false,\n  singUpError: null,\n  changeNicnameLoading: false,\n  // 닉네임 변경 시도중\n  changeNicnameDone: false,\n  changeNicnameError: null,\n  loadFollowersLoading: false,\n  // 닉네임 변경 시도중\n  loadFollowersDone: false,\n  loadFollowersError: null,\n  loadFollowingsLoading: false,\n  // 닉네임 변경 시도중\n  loadFollowingsDone: false,\n  loadFollowingsError: null,\n  removeFollowerLoading: false,\n  // 닉네임 변경 시도중\n  removeFollowerDone: false,\n  removeFollowerError: null,\n  me: null\n};\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOW_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case REMOVE_FOLLOWER_REQUEST:\n      draft.removeFollowerLoading = true;\n      draft.removeFollowerError = null;\n      draft.removeFollowerDone = false;\n      break;\n\n    case REMOVE_FOLLOWER_SUCCESS:\n      draft.removeFollowerLoading = false;\n      draft.me.Followers = draft.me.Followers.filter(v => v.id !== action.data.UserId);\n      draft.removeFollowerDone = true;\n      break;\n\n    case REMOVE_FOLLOWER_FAILURE:\n      draft.removeFollowerLoading = false;\n      draft.removeFollowerError = action.error;\n      break;\n\n    case LOAD_FOLLOWINGS_REQUEST:\n      draft.loadFollowingsLoading = true;\n      draft.loadFollowingsError = null;\n      draft.loadFollowingsDone = false;\n      break;\n\n    case LOAD_FOLLOWINGS_SUCCESS:\n      draft.loadFollowingsLoading = false;\n      draft.me.Followings = action.data;\n      draft.loadFollowingsDone = true;\n      break;\n\n    case LOAD_FOLLOWINGS_FAILURE:\n      draft.loadFollowingsLoading = false;\n      draft.loadFollowingsError = action.error;\n      break;\n\n    case LOAD_FOLLOWERS_REQUEST:\n      draft.loadFollowersLoading = true;\n      draft.loadFollowersError = null;\n      draft.loadFollowersDone = false;\n      break;\n\n    case LOAD_FOLLOWERS_SUCCESS:\n      draft.loadFollowersLoading = false;\n      draft.me.Followers = action.data;\n      draft.loadFollowersDone = true;\n      break;\n\n    case LOAD_FOLLOWERS_FAILURE:\n      draft.loadFollowersLoading = false;\n      draft.loadFollowersError = action.error;\n      break;\n\n    case LOAD_USER_REQUEST:\n      draft.loadUserLoading = true;\n      draft.loadUserError = null;\n      draft.loadUserDone = false;\n      break;\n\n    case LOAD_USER_SUCCESS:\n      draft.loadUserLoading = false;\n      draft.me = action.data;\n      draft.loadUserDone = true;\n      break;\n\n    case LOAD_USER_FAILURE:\n      draft.loadUserLoading = false;\n      draft.loadUserError = action.error;\n      break;\n\n    case FOLLOW_REQUEST:\n      draft.followLoading = true;\n      draft.followError = null;\n      draft.followDone = false;\n      break;\n\n    case FOLLOW_SUCCESS:\n      draft.followLoading = false;\n      draft.me.Followings.push({\n        id: action.data.UserId\n      });\n      draft.followDone = true;\n      break;\n\n    case FOLLOW_FAILURE:\n      draft.followLoading = false;\n      draft.followError = action.error;\n      break;\n\n    case UNFOLLOW_REQUEST:\n      draft.unfollowLoading = true;\n      draft.unfollowError = null;\n      draft.unfollowDone = false;\n      break;\n\n    case UNFOLLOW_SUCCESS:\n      draft.unfollowLoading = false;\n      draft.me.Followings = draft.me.Followings.filter(v => v.id !== action.data.UserId);\n      draft.unfollowDone = true;\n      break;\n\n    case UNFOLLOW_FAILURE:\n      draft.unfollowLoading = false;\n      draft.unfollowError = action.error;\n      break;\n\n    case LOG_IN_REQUEST:\n      draft.logInLoading = true;\n      draft.logInError = null;\n      draft.logInDone = false;\n      break;\n\n    case LOG_IN_SUCCESS:\n      draft.logInLoading = false;\n      draft.me = action.data;\n      draft.logInDone = true;\n      break;\n\n    case LOG_IN_FAILURE:\n      draft.logInLoading = false;\n      draft.logInError = action.error;\n      break;\n\n    case LOG_OUT_REQUEST:\n      draft.logOutLoading = true;\n      draft.logOutError = null;\n      draft.logOutDone = false;\n      break;\n\n    case LOG_OUT_SUCCESS:\n      draft.logOutLoading = false;\n      draft.logOutDone = true;\n      draft.me = null;\n      break;\n\n    case LOG_OUT_FAILURE:\n      draft.logOutLoading = false;\n      draft.logOutError = action.error;\n      break;\n\n    case SIGN_UP_REQUEST:\n      draft.signUpLoading = true;\n      draft.signUpError = null;\n      draft.signUpDone = false;\n      break;\n\n    case SIGN_UP_SUCCESS:\n      draft.signUpLoading = false;\n      draft.signUpDone = true;\n      break;\n\n    case SIGN_UP_FAILURE:\n      draft.signUpLoading = false;\n      draft.signUpError = action.error;\n      break;\n\n    case CHANGE_NICKNAME_REQUEST:\n      draft.changeNicknameLoading = true;\n      draft.changeNicknameError = null;\n      draft.changeNicknameDone = false;\n      break;\n\n    case CHANGE_NICKNAME_SUCCESS:\n      draft.me.nickname = action.data.nickname;\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameDone = true;\n      break;\n\n    case CHANGE_NICKNAME_FAILURE:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameError = action.error;\n      break;\n\n    case ADD_POST_TO_ME:\n      draft.me.Posts.unshift({\n        id: action.data\n      });\n      break;\n    // return {\n    //   ...state,\n    //   me: {\n    //     ...state.me,\n    //     Posts: [{ id: action.data }, ...state.me.Posts],\n    //   },\n    // };\n\n    case REMOVE_POST_OF_ME:\n      draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data);\n      break;\n    // return {\n    //   ...state,\n    //   me: {\n    //     ...state.me,\n    //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\n    //   },\n    // };\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/reducers/user.js"],"names":["produce","initialState","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","followLoading","loadUserLoading","loadUserDone","loadUserError","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","singUpLoading","singUpDone","singUpError","changeNicnameLoading","changeNicnameDone","changeNicnameError","loadFollowersLoading","loadFollowersDone","loadFollowersError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","removeFollowerLoading","removeFollowerDone","removeFollowerError","me","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","draft","Followers","filter","v","id","UserId","error","Followings","push","signUpLoading","signUpError","signUpDone","changeNicknameLoading","changeNicknameError","changeNicknameDone","nickname","Posts","unshift"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  loadMyInfoLoading: false, // 유저 정보 가져오기 시도중\r\n  loadMyInfoDone: false,\r\n  loadMyInfoError: null,\r\n  followLoading: false, // 팔로우 시도중\r\n  loadUserLoading: false, // 유저 정보 가져오기 시도중\r\n  loadUserDone: false,\r\n  loadUserError: null,\r\n  followLoading: false, // 팔로우 시도중\r\n  followDone: false,\r\n  followError: null,\r\n  unfollowLoading: false, // 언팔로우 시도중\r\n  unfollowDone: false,\r\n  unfollowError: null,\r\n  logInLoading: false, // 로그인 시도중\r\n  logInDone: false,\r\n  logInError: null,\r\n  logOutLoading: false, // 로그아웃 시도중\r\n  logOutDone: false,\r\n  logOutError: null,\r\n  singUpLoading: false, // 회원 가입 시도중\r\n  singUpDone: false,\r\n  singUpError: null,\r\n  changeNicnameLoading: false, // 닉네임 변경 시도중\r\n  changeNicnameDone: false,\r\n  changeNicnameError: null,\r\n\r\n  loadFollowersLoading: false, // 닉네임 변경 시도중\r\n  loadFollowersDone: false,\r\n  loadFollowersError: null,\r\n\r\n  loadFollowingsLoading: false, // 닉네임 변경 시도중\r\n  loadFollowingsDone: false,\r\n  loadFollowingsError: null,\r\n\r\n  removeFollowerLoading: false, // 닉네임 변경 시도중\r\n  removeFollowerDone: false,\r\n  removeFollowerError: null,\r\n\r\n  me: null,\r\n\r\n};\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOW_FAILURE';\r\n\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type: LOG_IN_REQUEST,\r\n        data,\r\n    }\r\n}\r\n\r\nexport const logoutRequestAction = () => {\r\n    return {\r\n        type: LOG_OUT_REQUEST,\r\n    }\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case REMOVE_FOLLOWER_REQUEST:\r\n        draft.removeFollowerLoading = true;\r\n        draft.removeFollowerError = null;\r\n        draft.removeFollowerDone = false;\r\n        break;\r\n      case REMOVE_FOLLOWER_SUCCESS:\r\n        draft.removeFollowerLoading = false;\r\n        draft.me.Followers = draft.me.Followers.filter((v) => v.id !== action.data.UserId);\r\n        draft.removeFollowerDone = true;\r\n        break;\r\n      case REMOVE_FOLLOWER_FAILURE:\r\n        draft.removeFollowerLoading = false;\r\n        draft.removeFollowerError = action.error;\r\n        break;\r\n        case LOAD_FOLLOWINGS_REQUEST:\r\n        draft.loadFollowingsLoading = true;\r\n        draft.loadFollowingsError = null;\r\n        draft.loadFollowingsDone = false;\r\n        break;\r\n      case LOAD_FOLLOWINGS_SUCCESS:\r\n        draft.loadFollowingsLoading = false;\r\n        draft.me.Followings = action.data;\r\n        draft.loadFollowingsDone = true;\r\n        break;\r\n      case LOAD_FOLLOWINGS_FAILURE:\r\n        draft.loadFollowingsLoading = false;\r\n        draft.loadFollowingsError = action.error;\r\n        break;\r\n      case LOAD_FOLLOWERS_REQUEST:\r\n        draft.loadFollowersLoading = true;\r\n        draft.loadFollowersError = null;\r\n        draft.loadFollowersDone = false;\r\n        break;\r\n      case LOAD_FOLLOWERS_SUCCESS:\r\n        draft.loadFollowersLoading = false;\r\n        draft.me.Followers = action.data;\r\n        draft.loadFollowersDone = true;\r\n        break;\r\n      case LOAD_FOLLOWERS_FAILURE:\r\n        draft.loadFollowersLoading = false;\r\n        draft.loadFollowersError = action.error;\r\n        break;\r\n        case LOAD_USER_REQUEST:\r\n      draft.loadUserLoading = true;\r\n      draft.loadUserError = null;\r\n      draft.loadUserDone = false;\r\n      break;\r\n    case LOAD_USER_SUCCESS:\r\n      draft.loadUserLoading = false;\r\n      draft.me = action.data;\r\n      draft.loadUserDone = true;\r\n      break;\r\n    case LOAD_USER_FAILURE:\r\n      draft.loadUserLoading = false;\r\n      draft.loadUserError = action.error;\r\n      break;\r\n      case FOLLOW_REQUEST:\r\n        draft.followLoading = true;\r\n        draft.followError = null;\r\n        draft.followDone = false;\r\n        break;\r\n      case FOLLOW_SUCCESS:\r\n        draft.followLoading = false;\r\n        draft.me.Followings.push({ id: action.data.UserId });\r\n        draft.followDone = true;\r\n        break;\r\n      case FOLLOW_FAILURE:\r\n        draft.followLoading = false;\r\n        draft.followError = action.error;\r\n        break;\r\n      case UNFOLLOW_REQUEST:\r\n        draft.unfollowLoading = true;\r\n        draft.unfollowError = null;\r\n        draft.unfollowDone = false;\r\n        break;\r\n      case UNFOLLOW_SUCCESS:\r\n        draft.unfollowLoading = false;\r\n        draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data.UserId);\r\n        draft.unfollowDone = true;\r\n        break;\r\n      case UNFOLLOW_FAILURE:\r\n        draft.unfollowLoading = false;\r\n        draft.unfollowError = action.error;\r\n        break;\r\n      case LOG_IN_REQUEST:\r\n        draft.logInLoading = true;\r\n        draft.logInError = null;\r\n        draft.logInDone = false;\r\n        break;\r\n      case LOG_IN_SUCCESS:\r\n        draft.logInLoading = false;\r\n        draft.me = action.data;\r\n        draft.logInDone = true;\r\n        break;\r\n      case LOG_IN_FAILURE:\r\n        draft.logInLoading = false;\r\n        draft.logInError = action.error;\r\n        break;\r\n      case LOG_OUT_REQUEST:\r\n        draft.logOutLoading = true;\r\n        draft.logOutError = null;\r\n        draft.logOutDone = false;\r\n        break;\r\n      case LOG_OUT_SUCCESS:\r\n        draft.logOutLoading = false;\r\n        draft.logOutDone = true;\r\n        draft.me = null;\r\n        break;\r\n      case LOG_OUT_FAILURE:\r\n        draft.logOutLoading = false;\r\n        draft.logOutError = action.error;\r\n        break;\r\n      case SIGN_UP_REQUEST:\r\n        draft.signUpLoading = true;\r\n        draft.signUpError = null;\r\n        draft.signUpDone = false;\r\n        break;\r\n      case SIGN_UP_SUCCESS:\r\n        draft.signUpLoading = false;\r\n        draft.signUpDone = true;\r\n        break;\r\n      case SIGN_UP_FAILURE:\r\n        draft.signUpLoading = false;\r\n        draft.signUpError = action.error;\r\n        break;\r\n      case CHANGE_NICKNAME_REQUEST:\r\n        draft.changeNicknameLoading = true;\r\n        draft.changeNicknameError = null;\r\n        draft.changeNicknameDone = false;\r\n        break;\r\n      case CHANGE_NICKNAME_SUCCESS:\r\n        draft.me.nickname = action.data.nickname;\r\n        draft.changeNicknameLoading = false;\r\n        draft.changeNicknameDone = true;\r\n        break;\r\n      case CHANGE_NICKNAME_FAILURE:\r\n        draft.changeNicknameLoading = false;\r\n        draft.changeNicknameError = action.error;\r\n        break;\r\n      case ADD_POST_TO_ME:\r\n        draft.me.Posts.unshift({ id: action.data });\r\n        break;\r\n        // return {\r\n        //   ...state,\r\n        //   me: {\r\n        //     ...state.me,\r\n        //     Posts: [{ id: action.data }, ...state.me.Posts],\r\n        //   },\r\n        // };\r\n      case REMOVE_POST_OF_ME:\r\n        draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n        break;\r\n        // return {\r\n        //   ...state,\r\n        //   me: {\r\n        //     ...state.me,\r\n        //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n        //   },\r\n        // };\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}