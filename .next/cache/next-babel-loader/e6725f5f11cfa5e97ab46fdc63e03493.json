{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\SangHo\\\\Desktop\\\\inflearn\\\\react-nodebird\\\\front\\\\components\\\\PostCard.js\",\n    _templateObject,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, List, Comment, Popover } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport PostImages from './PostImages';\nimport FollowButton from './FollowButton';\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar CardWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  margin-bottom: 20px;\\n\"])));\n_c = CardWrapper;\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  console.log(post, 'postCard console.log');\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onLike = useCallback(function () {\n    dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onUnLike = useCallback(function () {\n    dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var liked = post.Likers.find(function (v) {\n    return v.id === id;\n  });\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 34\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"message\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 23\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 23\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, _this)\n      }, \"ellipsis\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, _this)],\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 22\n      }, _this),\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 24\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments ? post.Comments.length : 0, \" \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments || [],\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Link, {\n                href: {\n                  pathname: '/user',\n                  query: {\n                    id: item.User.id\n                  }\n                },\n                as: \"/user/\".concat(item.User.id),\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: item.User.nickname[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 26\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true)]\n  }, post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostCard, \"7vQDLjW+3WYy5vZK5JhwgAjdioo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c2 = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    UserId: PropTypes.number,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any),\n    Likers: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardWrapper\");\n$RefreshReg$(_c2, \"PostCard\");","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/components/PostCard.js"],"names":["React","useState","useCallback","Card","Button","Avatar","List","Comment","Popover","PropTypes","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","useSelector","useDispatch","styled","Link","CommentForm","PostCardContent","PostImages","FollowButton","REMOVE_POST_REQUEST","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","CardWrapper","div","PostCard","post","console","log","dispatch","state","removePostLoading","commentFormOpened","setCommentFormOpened","onToggleComment","prev","onLike","type","data","id","onUnLike","onRemovePost","user","me","liked","Likers","find","v","Images","User","nickname","content","Comments","length","item","pathname","query","propTypes","shape","number","object","UserId","string","createdAt","arrayOf","any","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Card, Button, Avatar, List, Comment, Popover } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Link from 'next/link';\r\n\r\nimport CommentForm from './CommentForm';\r\nimport PostCardContent from './PostCardContent';\r\nimport PostImages from './PostImages';\r\nimport FollowButton from './FollowButton';\r\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST } from '../reducers/post';\r\n\r\nconst CardWrapper = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst PostCard = ({ post }) => {\r\n  console.log(post, 'postCard console.log');\r\n  const dispatch = useDispatch();\r\n  const { removePostLoading } = useSelector((state) => state.post);\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n\r\n  const onLike = useCallback(() => {\r\n    dispatch({\r\n      type: LIKE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, []);\r\n  const onUnLike = useCallback(() => {\r\n    dispatch({\r\n      type: UNLIKE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, []);\r\n\r\n  const onRemovePost = useCallback(() => {\r\n    dispatch({\r\n      type: REMOVE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, []);\r\n\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  const liked = post.Likers.find((v) => v.id === id);\r\n  return (\r\n    <CardWrapper key={post.id}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          liked\r\n            ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onUnLike} />\r\n            : <HeartOutlined key=\"heart\" onClick={onLike} />,\r\n          <MessageOutlined key=\"message\" onClick={onToggleComment} />,\r\n          <Popover\r\n            key=\"ellipsis\"\r\n            content={(\r\n              <Button.Group>\r\n                {id && post.User.id === id\r\n                  ? (\r\n                    <>\r\n                      <Button>수정</Button>\r\n                      <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\r\n                    </>\r\n                  )\r\n                  : <Button>신고</Button>}\r\n              </Button.Group>\r\n            )}\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n        extra={id && <FollowButton post={post} />}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={<PostCardContent postData={post.content} />}\r\n        />\r\n      </Card>\r\n      {commentFormOpened && (\r\n        <>\r\n          <CommentForm post={post} />\r\n          <List\r\n            header={`${post.Comments ? post.Comments.length : 0} 댓글`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={post.Comments || []}\r\n            renderItem={(item) => (\r\n              <li>\r\n                <Comment\r\n                  author={item.User.nickname}\r\n                  avatar={(\r\n                    <Link href={{ pathname: '/user', query: { id: item.User.id } }} as={`/user/${item.User.id}`}>\r\n                      <a><Avatar>{item.User.nickname[0]}</Avatar></a>\r\n                    </Link>\r\n                  )}\r\n                  content={item.content}\r\n                />\r\n              </li>\r\n            )}\r\n          />\r\n        </>\r\n      )}\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    UserId: PropTypes.number,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.string,\r\n    Comments: PropTypes.arrayOf(PropTypes.any),\r\n    Images: PropTypes.arrayOf(PropTypes.any),\r\n    Likers: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}