{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '우와 개정판이 나왔군요~'\n    }, {\n      User: {\n        nickname: 'hero'\n      },\n      content: '얼른 사고 싶어요~'\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false\n};\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nconst dummyPost = {\n  id: 2,\n  content: '더미데이터입니다.',\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost, ...state.mainPosts],\n        postAdded: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","postAdded","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","addPost","data","type","dummyPost","reducer","state","action","console","log","ADD_POST"],"mappings":";;;;;;AACA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAC,CAAC;AACPC,IAAAA,EAAE,EAAC,CADI;AAEPC,IAAAA,IAAI,EAAC;AACDD,MAAAA,EAAE,EAAC,CADF;AAEDE,MAAAA,QAAQ,EAAC;AAFR,KAFE;AAMPC,IAAAA,OAAO,EAAC,uBAND;AAOPC,IAAAA,MAAM,EAAC,CAAC;AACAC,MAAAA,GAAG,EAAC;AADJ,KAAD,EAEA;AACCA,MAAAA,GAAG,EAAE;AADN,KAFA,EAIA;AACCA,MAAAA,GAAG,EAAE;AADN,KAJA,CAPA;AAePC,IAAAA,QAAQ,EAAC,CAAC;AACNL,MAAAA,IAAI,EAAC;AACDC,QAAAA,QAAQ,EAAC;AADR,OADC;AAINC,MAAAA,OAAO,EAAC;AAJF,KAAD,EAKN;AACCF,MAAAA,IAAI,EAAE;AACFC,QAAAA,QAAQ,EAAC;AADP,OADP;AAICC,MAAAA,OAAO,EAAC;AAJT,KALM;AAfF,GAAD,CADc;AA4BxBI,EAAAA,UAAU,EAAC,EA5Ba;AA6BxBC,EAAAA,SAAS,EAAC;AA7Bc,CAArB;AAgCP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAGP,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;AAC9BC,EAAAA,IAAI,EAACL,gBADyB;AAE9BI,EAAAA;AAF8B,CAAX,CAAhB;AAIP,MAAME,SAAS,GAAG;AACdf,EAAAA,EAAE,EAAC,CADW;AAEdG,EAAAA,OAAO,EAAC,WAFM;AAGdF,EAAAA,IAAI,EAAC;AACDD,IAAAA,EAAE,EAAC,CADF;AAEDE,IAAAA,QAAQ,EAAC;AAFR,GAHS;AAOdE,EAAAA,MAAM,EAAC,EAPO;AAQdE,EAAAA,QAAQ,EAAC;AARK,CAAlB;;AAWA,MAAMU,OAAO,GAAG,CAACC,KAAK,GAAGnB,YAAT,EAAuBoB,MAAvB,KAAkC;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAKO,QAAL;AACI,6CACOJ,KADP;AAEIlB,QAAAA,SAAS,EAAC,CAACgB,SAAD,EAAY,GAAGE,KAAK,CAAClB,SAArB,CAFd;AAGIS,QAAAA,SAAS,EAAC;AAHd;;AAMJ;AACI,aAAOS,KAAP;AATR;AAWH,CAbD;;AAeA,eAAeD,OAAf","sourcesContent":["\r\nexport const initialState = {\r\n    mainPosts:[{\r\n        id:1,\r\n        User:{\r\n            id:1,\r\n            nickname:'제로초',\r\n        },\r\n        content:'첫 번째 게시글 #해시태그 #익스프레스',\r\n        Images:[{\r\n                src:'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\r\n            }, {\r\n                src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\r\n            }, {\r\n                src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg',\r\n                \r\n        }],\r\n        Comments:[{\r\n            User:{\r\n                nickname:'nero',\r\n            },\r\n            content:'우와 개정판이 나왔군요~',\r\n        }, {\r\n            User: {\r\n                nickname:'hero',\r\n            },\r\n            content:'얼른 사고 싶어요~',\r\n        }]\r\n    }],\r\n    imagePaths:[],\r\n    postAdded:false,\r\n}\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\n\r\nexport const addPost = (data) => ({\r\n    type:ADD_POST_REQUEST,\r\n    data,\r\n})\r\nconst dummyPost = {\r\n    id:2,\r\n    content:'더미데이터입니다.',\r\n    User:{\r\n        id:1,\r\n        nickname:'제로초',\r\n    },\r\n    Images:[],\r\n    Comments:[],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    console.log(action)\r\n    switch (action.type) {\r\n        case ADD_POST: \r\n            return {\r\n                ...state,\r\n                mainPosts:[dummyPost, ...state.mainPosts],\r\n                postAdded:true,\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}