{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SangHo\\\\Desktop\\\\inflearn\\\\react-nodebird\\\\front\\\\components\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone, PlusOutlined } from '@ant-design/icons';\nimport { Button, Card, Popover, List, Comment } from 'antd';\nimport React, { useCallback, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport PostImages from '../components/PostImages';\nimport CommentForm from '../components/CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setlike = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setlike(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 38\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, 'retweet', false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, 'heart', false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 18\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, 'heart', false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 18\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, 'comment', false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 18\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 18\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 16\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, _this)\n      }, 'more', false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 24\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 22\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"6db6l9XPZeDenTxivbSmzCSUG5Q=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/components/PostCard.js"],"names":["EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","HeartTwoTone","PlusOutlined","Button","Card","Popover","List","Comment","React","useCallback","useState","useSelector","useDispatch","PropTypes","Avatar","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","PostCard","post","dispatch","liked","setlike","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","id","state","user","me","onRemovePost","type","data","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["\r\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined,RetweetOutlined ,HeartTwoTone, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Card, Popover, List, Comment } from 'antd';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport PostImages from '../components/PostImages';\r\nimport CommentForm from '../components/CommentForm';\r\nimport PostCardContent from './PostCardContent';\r\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\r\n\r\n\r\n\r\nconst PostCard = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const [liked, setlike] = useState(false);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const onToggleLike = useCallback(()=> {\r\n        setlike((prev) => !prev);\r\n    }, [])\r\n    const onToggleComment = useCallback(()=> {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, [])\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    \r\n    const onRemovePost = useCallback(() => {\r\n        dispatch({\r\n            type:REMOVE_POST_REQUEST,\r\n            data:post.id,\r\n        })\r\n    })\r\n    \r\n    return (\r\n        <div style={{marginBottom:20}}>\r\n            <Card\r\n            cover={post.Images[0] && <PostImages images={post.Images} />}\r\n            actions={[\r\n            <RetweetOutlined key='retweet' />,\r\n            liked\r\n                ?<HeartTwoTone twoToneColor='#eb2f96' key='heart' onClick={onToggleLike} />\r\n                :<HeartOutlined onClick={onToggleLike} key='heart'/>,\r\n            <MessageOutlined onClick={onToggleComment} key='comment'/>,\r\n            <Popover key='more' content={(\r\n                <Button.Group>\r\n                 {id && post.User.id === id \r\n                  ? (\r\n                <>\r\n                 <Button>수정</Button>\r\n                 <Button type='danger' onClick={onRemovePost}>삭제</Button>\r\n                </>\r\n            ) :<Button>신고</Button>}\r\n               </Button.Group>\r\n            )}>\r\n                <EllipsisOutlined />\r\n            </Popover>,\r\n\r\n\r\n            ]}\r\n            >\r\n               <Card.Meta \r\n               avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n               title={post.User.nickname}\r\n               description={<PostCardContent postData={post.content} />}\r\n               />\r\n                   \r\n            </Card>\r\n            {commentFormOpened && (\r\n               <div>\r\n                <CommentForm post={post} />\r\n                <List  header={`${post.Comments.length}개의 댓글`}\r\n                 itemLayout={\"horizontal\"}\r\n                 dataSource={post.Comments}\r\n                 renderItem={(item) => (\r\n                     <li>\r\n                        <Comment\r\n                        author={item.User.nickname}\r\n                        avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                        content={item.content}\r\n                        />   \r\n                     </li>\r\n                 )}\r\n                />\r\n               </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nPostCard.propTypes = {\r\n    post:PropTypes.shape({\r\n        id:PropTypes.number,\r\n        User:PropTypes.object,\r\n        content:PropTypes.string,\r\n        createdAt:PropTypes.object,\r\n        Comments:PropTypes.arrayOf(PropTypes.object),\r\n        Images:PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\nexport default PostCard"]},"metadata":{},"sourceType":"module"}