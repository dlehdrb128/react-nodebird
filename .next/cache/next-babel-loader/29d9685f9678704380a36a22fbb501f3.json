{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SangHo\\\\Desktop\\\\inflearn\\\\react-nodebird\\\\front\\\\components\\\\CommentForm.js\";\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback } from 'react';\nimport useInput from '../hooks/useInput';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        userId: id,\n        postId: post.id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/components/CommentForm.js"],"names":["Button","Form","Input","React","useCallback","useInput","PropTypes","useSelector","useDispatch","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","addCommentDone","dispatch","commentText","onChangeCommentText","setCommentText","useEffect","onSubmitComment","console","log","type","data","content","userId","postId","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";AAAA,SAAQA,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAkC,MAAlC;AACA,OAAOC,KAAP,IAAeC,WAAf,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC7B,QAAMC,EAAE,GAAGL,WAAW,CAAEM,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM;AAACI,IAAAA;AAAD,MAAmBT,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACF,IAAlB,CAApC;AACA,QAAMM,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDf,QAAQ,CAAC,EAAD,CAAnE;AAEAgB,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGL,cAAH,EAAmB;AACfI,MAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AACJ,GAJQ,EAIN,CAACJ,cAAD,CAJM,CAAT;AAOA,QAAMM,eAAe,GAAGlB,WAAW,CAAC,MAAK;AACrCmB,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAI,CAACC,EAAjB,EAAqBM,WAArB;AACAD,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEhB,mBADD;AAELiB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAET,WAAX;AAAwBU,QAAAA,MAAM,EAAEhB,EAAhC;AAAoCiB,QAAAA,MAAM,EAAElB,IAAI,CAACC;AAAjD;AAFD,KAAD,CAAR;AAIH,GANkC,EAMhC,CAACM,WAAD,EAAcN,EAAd,CANgC,CAAnC;AAOA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEU,eAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAACQ,QAAAA,QAAQ,EAAC,UAAV;AAAuBC,QAAAA,MAAM,EAAC;AAA9B,OAAlB;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEb,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAACW,UAAAA,QAAQ,EAAC,UAAV;AAAsBE,UAAAA,KAAK,EAAC,CAA5B;AAA+BC,UAAAA,MAAM,EAAE,CAAC;AAAxC,SAAf;AAA4D,QAAA,IAAI,EAAC,SAAjE;AAA2E,QAAA,QAAQ,EAAC,QAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA5BD;;AA8BAvB,WAAW,CAACwB,SAAZ,GAAwB;AACpBvB,EAAAA,IAAI,EAAEL,SAAS,CAAC6B,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAe1B,WAAf","sourcesContent":["import {Button, Form, Input} from 'antd';\r\nimport React,{ useCallback, } from 'react';\r\nimport useInput from '../hooks/useInput';\r\nimport PropTypes from 'prop-types'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nconst CommentForm = ({post})  => {\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const {addCommentDone} = useSelector((state) => state.post);\r\n    const dispatch = useDispatch();\r\n    const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n\r\n    useEffect(()=> {\r\n        if(addCommentDone) {\r\n            setCommentText('');\r\n        }\r\n    }, [addCommentDone])\r\n    \r\n\r\n    const onSubmitComment = useCallback(()=> {\r\n        console.log(post.id, commentText);\r\n        dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: { content: commentText, userId: id, postId: post.id },\r\n          });\r\n    }, [commentText, id])\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n          <Form.Item style={{position:'relative' , margin:0}} >\r\n              <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\r\n              <Button style={{position:'absolute', right:0, bottom: -40}} type='primary' htmlType='submit'>삐약</Button>\r\n          </Form.Item> \r\n        </Form>\r\n    )\r\n} \r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n  };\r\n  \r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}