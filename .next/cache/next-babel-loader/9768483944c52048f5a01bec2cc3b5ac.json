{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SangHo\\\\Desktop\\\\inflearn\\\\react-nodebird\\\\front\\\\pages\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport { ConfigContext } from 'antd/lib/config-provider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostsLoading,\n    retweetError\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    console.log('rerender');\n\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(() => {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 1200) {\n        if (hasMorePost && !loadPostsLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, loadPostsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }, this), mainPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 32\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(context => {\n  console.log(context, '에헤헤헤헤헤헤헤헤헤');\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n});\nexport default Home;","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","LOAD_USER_REQUEST","wrapper","ConfigContext","Home","dispatch","me","state","user","mainPosts","hasMorePost","loadPostsLoading","retweetError","post","console","log","alert","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","type","addEventListener","removeEventListener","map","getServerSideProps","context","store"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\nimport { LOAD_USER_REQUEST } from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\nimport { ConfigContext } from 'antd/lib/config-provider';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const {\r\n    mainPosts, hasMorePost, loadPostsLoading, retweetError } = useSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    console.log('rerender');\r\n    if (retweetError) {\r\n      alert(retweetError);\r\n    }\r\n  }, [retweetError]);\r\n\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\r\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 1200) {\r\n        if (hasMorePost && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n            lastId,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [hasMorePost, loadPostsLoading]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {me && <PostForm />}\r\n      {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps((context) => {\r\n  console.log(context, '에헤헤헤헤헤헤헤헤헤');\r\n  context.store.dispatch({\r\n    type: LOAD_USER_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POSTS_REQUEST,\r\n  });\r\n});\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}