{"ast":null,"code":"import { all, put, delay, fork, takeLatest } from \"@redux-saga/core/effects\";\nimport axios from 'axios';\n\nfunction addpostAPI(data) {\n  return axios.post('/api/addpost', data);\n}\n\nfunction* addpost(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_REQUEST\n    }); //  const result = yield call(addpostAPI,action.data)\n\n    yield put({\n      type: ADD_POST_SUCCESS //  data:result.data\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addpost, 2000);\n}\n\nexport default function* postSage() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/sagas/post.js"],"names":["all","put","delay","fork","takeLatest","axios","addpostAPI","data","post","addpost","action","type","ADD_POST_REQUEST","ADD_POST_SUCCESS","err","ADD_POST_FAILURE","watchAddPost","postSage"],"mappings":"AAAA,SAASA,GAAT,EAAaC,GAAb,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA6BC,UAA7B,QAA+C,0BAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,cAAX,EAA0BD,IAA1B,CAAP;AACD;;AACD,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA,UAAMR,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNU,MAAAA,IAAI,EAACC;AADC,KAAD,CAAT,CAFA,CAKN;;AACC,UAAMX,GAAG,CAAC;AACNU,MAAAA,IAAI,EAACE,gBADC,CAEP;;AAFO,KAAD,CAAT;AAIC,GAVA,CAUC,OAAOC,GAAP,EAAY;AACV,UAAMb,GAAG,CAAC;AACNU,MAAAA,IAAI,EAACI,gBADC;AAENR,MAAAA,IAAI,EAACO,GAAG,CAACP;AAFH,KAAD,CAAT;AAIH;AACH;;AAGH,UAAUS,YAAV,GAAyB;AACrB,QAAMZ,UAAU,CAAC,kBAAD,EAAqBK,OAArB,EAA8B,IAA9B,CAAhB;AACH;;AAED,eAAe,UAAUQ,QAAV,GAAqB;AAChC,QAAMjB,GAAG,CAAC,CACNG,IAAI,CAACa,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all,put,delay, fork,takeLatest } from \"@redux-saga/core/effects\";\r\nimport axios from 'axios'\r\n\r\n\r\n  \r\nfunction addpostAPI(data) {\r\n    return axios.post('/api/addpost',data)\r\n  }\r\n  function* addpost(action) {\r\n      try {\r\n          yield delay(1000);\r\n          yield put({\r\n              type:ADD_POST_REQUEST,\r\n           });\r\n    //  const result = yield call(addpostAPI,action.data)\r\n     yield put({\r\n         type:ADD_POST_SUCCESS,\r\n        //  data:result.data\r\n      });\r\n     } catch (err) {\r\n         yield put({\r\n             type:ADD_POST_FAILURE,\r\n             data:err.data\r\n         })\r\n     }\r\n  }\r\n\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest('ADD_POST_REQUEST', addpost, 2000)\r\n}\r\n\r\nexport default function* postSage() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}