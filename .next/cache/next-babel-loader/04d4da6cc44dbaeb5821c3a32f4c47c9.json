{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport reducer from \"../reducers\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(next);\n      console.log(action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore() {\n  var middlewares = [thunkMiddleware, loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: \"CHANGE_NICKNAME\",\n    data: \"boogicho\"\n  });\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","compose","createStore","reducer","composeWithDevTools","thunkMiddleware","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","middlewares","enhancer","store","type","data","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,eAAP,MAA4B,aAA5B;;AAGA,IAAMC,gBAAgB,GAAI,SAApBA,gBAAoB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,QAAb,QAAaA,QAAb;AAAA,SAA4B,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAY;AACxEC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,aAAOD,IAAI,CAACC,MAAD,CAAX;AACD,KAJmD;AAAA,GAA5B;AAAA,CAA1B;;AAOA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,WAAW,GAAG,CAACT,eAAD,EAAkBC,gBAAlB,CAApB;AACA,MAAMS,QAAQ,GAAG,QACdd,OAAO,CAACD,eAAe,MAAf,SAAmBc,WAAnB,CAAD,CADO,GAEdV,mBAAmB,CAACJ,eAAe,MAAf,SAAmBc,WAAnB,CAAD,CAFtB;AAGA,MAAME,KAAK,GAAGd,WAAW,CAACC,OAAD,EAASY,QAAT,CAAzB;AACAC,EAAAA,KAAK,CAACT,QAAN,CAAe;AACbU,IAAAA,IAAI,EAAE,iBADO;AAEbC,IAAAA,IAAI,EAAE;AAFO,GAAf;AAIA,SAAOF,KAAP;AACD,CAXD;;AAaA,IAAMG,OAAO,GAAGpB,aAAa,CAACc,cAAD,EAAiB;AAC5CO,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from \"next-redux-wrapper\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport reducer from \"../reducers\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\n\r\nconst loggerMiddleware =  ({ dispatch, getState }) => (next) => (action) => {\r\n    console.log(next)\r\n    console.log(action)\r\n    return next(action);\r\n  };\r\n\r\n\r\nconst configureStore = () => {\r\n  const middlewares = [thunkMiddleware, loggerMiddleware];\r\n  const enhancer = process.env.NODE_ENV === 'production'\r\n   ? compose(applyMiddleware(...middlewares))\r\n   : composeWithDevTools(applyMiddleware(...middlewares))\r\n  const store = createStore(reducer,enhancer);\r\n  store.dispatch({\r\n    type: \"CHANGE_NICKNAME\",\r\n    data: \"boogicho\",\r\n  });\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}