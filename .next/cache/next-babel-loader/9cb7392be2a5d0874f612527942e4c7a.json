{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SangHo\\\\Desktop\\\\inflearn\\\\react-nodebird\\\\front\\\\components\\\\PostCard.js\";\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone, PlusOutlined } from '@ant-design/icons';\nimport { Button, Card, Popover, List, Comment } from 'antd';\nimport React, { useCallback, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport PostImages from '../components/PostImages';\nimport CommentForm from '../components/CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    removePostLoading\n  } = useSelector(state => state.post);\n  const {\n    0: liked,\n    1: setlike\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setlike(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 38\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              onClick: onRemovePost,\n              loading: removePostLoading,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 24\n        }, this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments.length}개의 댓글`,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/components/PostCard.js"],"names":["EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","HeartTwoTone","PlusOutlined","Button","Card","Popover","List","Comment","React","useCallback","useState","useSelector","useDispatch","PropTypes","Avatar","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","PostCard","post","dispatch","removePostLoading","state","liked","setlike","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","id","user","me","onRemovePost","type","data","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["\r\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined,RetweetOutlined ,HeartTwoTone, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Card, Popover, List, Comment } from 'antd';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport PostImages from '../components/PostImages';\r\nimport CommentForm from '../components/CommentForm';\r\nimport PostCardContent from './PostCardContent';\r\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\r\n\r\nconst PostCard = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const { removePostLoading } = useSelector((state) => state.post);\r\n  const [liked, setlike] = useState(false);\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const onToggleLike = useCallback(() => {\r\n    setlike((prev) => !prev);\r\n  }, []);\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, [])\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    \r\n    const onRemovePost = useCallback(() => {\r\n        dispatch({\r\n            type: REMOVE_POST_REQUEST,\r\n            data: post.id,\r\n        })\r\n    })\r\n    \r\n    return (\r\n        <div style={{marginBottom:20}}>\r\n          <Card\r\n            cover={post.Images[0] && <PostImages images={post.Images} />}\r\n            actions={[\r\n              <RetweetOutlined key=\"retweet\" />,\r\n              liked\r\n                ?<HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\r\n                :<HeartOutlined onClick={onToggleLike} key=\"heart\" />,\r\n              <MessageOutlined onClick={onToggleComment} key=\"comment\" />,\r\n              <Popover key=\"more\" content={(\r\n                <Button.Group>\r\n                 {id && post.User.id === id \r\n                  ? (\r\n                <>\r\n                 <Button>수정</Button>\r\n                 <Button type='danger' onClick={onRemovePost} loading={removePostLoading}>삭제</Button>\r\n                </>\r\n            ) :<Button>신고</Button>}\r\n               </Button.Group>\r\n            )}>\r\n                <EllipsisOutlined />\r\n            </Popover>,\r\n\r\n\r\n            ]}\r\n            >\r\n               <Card.Meta \r\n               avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n               title={post.User.nickname}\r\n               description={<PostCardContent postData={post.content} />}\r\n               />\r\n                   \r\n            </Card>\r\n          {commentFormOpened && (\r\n               <div>\r\n                <CommentForm post={post} />\r\n                <List  header={`${post.Comments.length}개의 댓글`}\r\n                 itemLayout={\"horizontal\"}\r\n                 dataSource={post.Comments}\r\n                 renderItem={(item) => (\r\n                     <li>\r\n                        <Comment\r\n                        author={item.User.nickname}\r\n                        avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                        content={item.content}\r\n                        />   \r\n                     </li>\r\n                 )}\r\n                />\r\n               </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nPostCard.propTypes = {\r\n    post:PropTypes.shape({\r\n        id:PropTypes.number,\r\n        User:PropTypes.object,\r\n        content:PropTypes.string,\r\n        createdAt:PropTypes.object,\r\n        Comments:PropTypes.arrayOf(PropTypes.object),\r\n        Images:PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\nexport default PostCard"]},"metadata":{},"sourceType":"module"}