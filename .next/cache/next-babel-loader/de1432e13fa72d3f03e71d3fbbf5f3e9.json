{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SangHo\\\\Desktop\\\\inflearn\\\\react-nodebird\\\\front\\\\pages\\\\post\\\\[id].js\";\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\nimport wrapper from '../../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { LOAD_POSTS_REQUEST } from '../../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [id, \"\\uBC88 \\uAC8C\\uC2DC\\uAE00\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/pages/post/[id].js"],"names":["useRouter","END","wrapper","LOAD_MY_INFO_REQUEST","LOAD_POSTS_REQUEST","Post","router","id","query","getServerSideProps","context","cookie","req","headers","axios","defaults","Cookie","store","dispatch","type","sagaTask","toPromise"],"mappings":";AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAASC,kBAAT,QAAmC,qBAAnC;;;AACA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAM;AAAEO,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AAEA,sBACE;AAAA,eAAMD,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAPD;;AASA,OAAO,MAAME,kBAAkB,GAAGP,OAAO,CAACO,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC5E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAG,EAAAA,KAAK,CAACC,QAAN,CAAeF,OAAf,CAAuBG,MAAvB,GAAgC,EAAhC;;AACA,MAAIN,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACzBG,IAAAA,KAAK,CAACC,QAAN,CAAeF,OAAf,CAAuBG,MAAvB,GAAgCL,MAAhC;AACD;;AACDD,EAAAA,OAAO,CAACO,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAEhB;AADe,GAAvB;AAGAO,EAAAA,OAAO,CAACO,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAEf;AADe,GAAvB;AAGAM,EAAAA,OAAO,CAACO,KAAR,CAAcC,QAAd,CAAuBjB,GAAvB;AACA,QAAMS,OAAO,CAACO,KAAR,CAAcG,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAd+B,CAA3B;AAeP,eAAehB,IAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport { END } from 'redux-saga';\r\nimport wrapper from '../../store/configureStore';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport { LOAD_POSTS_REQUEST } from '../../reducers/post';\r\nconst Post = () => {\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  return (\r\n    <div>{id}번 게시글</div>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch({\r\n      type: LOAD_MY_INFO_REQUEST,\r\n    });\r\n    context.store.dispatch({\r\n      type: LOAD_POSTS_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n  });\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}