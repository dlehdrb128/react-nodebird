{"ast":null,"code":"import { all, put, delay, fork, takeLatest } from \"@redux-saga/core/effects\";\nimport axios from 'axios';\nimport { ADD_POST_FAILURE, ADD_POST_SUCCESS, ADD_POST_REQUEST, ADD_COMMENT_FAILURE, ADD_COMMENT_SUCCESS, ADD_COMMENT_REQUEST } from '../reducers/post';\n\nfunction addpostAPI(data) {\n  return axios.post('/api/addpost', data);\n}\n\nfunction* addpost(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_REQUEST\n    }); //  const result = yield call(addpostAPI,action.data)\n\n    yield put({\n      type: ADD_POST_SUCCESS //  data:result.data\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_REQUEST\n    }); //  const result = yield call(addpostAPI,action.data)\n\n    yield put({\n      type: ADD_COMMENT_SUCCESS //  data:result.data\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addpost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSage() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/SangHo/Desktop/inflearn/react-nodebird/front/sagas/post.js"],"names":["all","put","delay","fork","takeLatest","axios","ADD_POST_FAILURE","ADD_POST_SUCCESS","ADD_POST_REQUEST","ADD_COMMENT_FAILURE","ADD_COMMENT_SUCCESS","ADD_COMMENT_REQUEST","addpostAPI","data","post","addpost","action","type","err","addCommentAPI","postId","addComment","watchAddPost","watchAddComment","postSage"],"mappings":"AAAA,SAASA,GAAT,EAAaC,GAAb,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA6BC,UAA7B,QAA+C,0BAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,gBAAR,EAA0BC,gBAA1B,EAA4CC,gBAA5C,EACQC,mBADR,EAC6BC,mBAD7B,EACmDC,mBADnD,QAEO,kBAFP;;AAMA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOR,KAAK,CAACS,IAAN,CAAW,cAAX,EAA0BD,IAA1B,CAAP;AACD;;AACD,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA,UAAMd,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAACT;AADC,KAAD,CAAT,CAFA,CAKN;;AACC,UAAMP,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAACV,gBADC,CAEP;;AAFO,KAAD,CAAT;AAIC,GAVA,CAUC,OAAOW,GAAP,EAAY;AACV,UAAMjB,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAACX,gBADC;AAENO,MAAAA,IAAI,EAACK,GAAG,CAACL;AAFH,KAAD,CAAT;AAIH;AACH;;AAED,SAASM,aAAT,CAAuBN,IAAvB,EAA6B;AAC3B,SAAOR,KAAK,CAACS,IAAN,CAAY,aAAYD,IAAI,CAACO,MAAO,UAApC,EAA8CP,IAA9C,CAAP;AACD;;AACD,UAAUQ,UAAV,CAAqBL,MAArB,EAA6B;AACzB,MAAI;AACA,UAAMd,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAACN;AADC,KAAD,CAAT,CAFA,CAKN;;AACC,UAAMV,GAAG,CAAC;AACAgB,MAAAA,IAAI,EAACP,mBADL,CAEP;;AAFO,KAAD,CAAT;AAIC,GAVA,CAUC,OAAOQ,GAAP,EAAY;AACV,UAAMjB,GAAG,CAAC;AACNgB,MAAAA,IAAI,EAACR,mBADC;AAENI,MAAAA,IAAI,EAACK,GAAG,CAACL;AAFH,KAAD,CAAT;AAIH;AACH;;AAEH,UAAUS,YAAV,GAAyB;AACrB,QAAMlB,UAAU,CAACI,gBAAD,EAAmBO,OAAnB,CAAhB;AACH;;AAID,UAAUQ,eAAV,GAA4B;AACxB,QAAMnB,UAAU,CAACO,mBAAD,EAAsBU,UAAtB,CAAhB;AACH;;AACD,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAMxB,GAAG,CAAC,CACNG,IAAI,CAACmB,YAAD,CADE,EAENnB,IAAI,CAACoB,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all,put,delay, fork,takeLatest } from \"@redux-saga/core/effects\";\r\nimport axios from 'axios'\r\n\r\nimport {ADD_POST_FAILURE, ADD_POST_SUCCESS, ADD_POST_REQUEST ,\r\n        ADD_COMMENT_FAILURE, ADD_COMMENT_SUCCESS , ADD_COMMENT_REQUEST,\r\n} from '../reducers/post'\r\n\r\n\r\n  \r\nfunction addpostAPI(data) {\r\n    return axios.post('/api/addpost',data)\r\n  }\r\n  function* addpost(action) {\r\n      try {\r\n          yield delay(1000);\r\n          yield put({\r\n              type:ADD_POST_REQUEST,\r\n           });\r\n    //  const result = yield call(addpostAPI,action.data)\r\n     yield put({\r\n         type:ADD_POST_SUCCESS,\r\n        //  data:result.data\r\n      });\r\n     } catch (err) {\r\n         yield put({\r\n             type:ADD_POST_FAILURE,\r\n             data:err.data\r\n         })\r\n     }\r\n  }\r\n\r\n  function addCommentAPI(data) {\r\n    return axios.post(`/api/post/${data.postId}/comment`,data)\r\n  }\r\n  function* addComment(action) {\r\n      try {\r\n          yield delay(1000);\r\n          yield put({\r\n              type:ADD_COMMENT_REQUEST,\r\n           });\r\n    //  const result = yield call(addpostAPI,action.data)\r\n     yield put({\r\n               type:ADD_COMMENT_SUCCESS,\r\n        //  data:result.data\r\n      });\r\n     } catch (err) {\r\n         yield put({\r\n             type:ADD_COMMENT_FAILURE,\r\n             data:err.data\r\n         })\r\n     }\r\n  }\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addpost)\r\n}\r\n\r\n\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment)\r\n}\r\nexport default function* postSage() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}